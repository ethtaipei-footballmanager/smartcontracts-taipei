{
  "address": "0xA8FCcd8B3b0e5b68E9171585fF6b2D514dc2e3a2",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "contract IERC20",
          "name": "_footballCoin",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_timelockBlocks",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "gameId",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "wagerAmount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "blockNumber",
          "type": "uint256"
        }
      ],
      "name": "GameAccepted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "gameId",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        }
      ],
      "name": "GameFinished",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "gameId",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        }
      ],
      "name": "GameFinishedByTimelock",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "gameId",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "wagerAmount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "blockNumber",
          "type": "uint256"
        }
      ],
      "name": "GameProposed",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "gameId",
          "type": "uint256"
        },
        {
          "internalType": "uint256[]",
          "name": "formation",
          "type": "uint256[]"
        }
      ],
      "name": "acceptGame",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "playerId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "teamId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "position",
          "type": "uint256"
        },
        {
          "internalType": "uint128",
          "name": "attack",
          "type": "uint128"
        },
        {
          "internalType": "uint128",
          "name": "defense",
          "type": "uint128"
        },
        {
          "internalType": "uint128",
          "name": "speed",
          "type": "uint128"
        },
        {
          "internalType": "uint128",
          "name": "power",
          "type": "uint128"
        },
        {
          "internalType": "uint128",
          "name": "stamina",
          "type": "uint128"
        },
        {
          "internalType": "uint128",
          "name": "technique",
          "type": "uint128"
        },
        {
          "internalType": "uint128",
          "name": "goalkeeping",
          "type": "uint128"
        }
      ],
      "name": "addPlayer",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "footballCoin",
      "outputs": [
        {
          "internalType": "contract IERC20",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "gameCount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "games",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "gameId",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "challenger",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "opponent",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "wagerAmount",
          "type": "uint256"
        },
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "goalsHomeTeam",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "goalsAwayTeam",
              "type": "uint256"
            }
          ],
          "internalType": "struct FootballGame.GameResult",
          "name": "result",
          "type": "tuple"
        },
        {
          "internalType": "uint256",
          "name": "blockNumber",
          "type": "uint256"
        },
        {
          "internalType": "enum FootballGame.Status",
          "name": "status",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getGameCount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "ignore",
      "outputs": [],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "gameId",
          "type": "uint256"
        }
      ],
      "name": "opponentClaimTimelock",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "players",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "player_id",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "team_id",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "position",
          "type": "uint256"
        },
        {
          "internalType": "uint128",
          "name": "attack",
          "type": "uint128"
        },
        {
          "internalType": "uint128",
          "name": "defense",
          "type": "uint128"
        },
        {
          "internalType": "uint128",
          "name": "speed",
          "type": "uint128"
        },
        {
          "internalType": "uint128",
          "name": "power",
          "type": "uint128"
        },
        {
          "internalType": "uint128",
          "name": "stamina",
          "type": "uint128"
        },
        {
          "internalType": "uint128",
          "name": "technique",
          "type": "uint128"
        },
        {
          "internalType": "uint128",
          "name": "goalkeeping",
          "type": "uint128"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "opponent",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "wagerAmount",
          "type": "uint256"
        },
        {
          "internalType": "uint256[]",
          "name": "formation",
          "type": "uint256[]"
        }
      ],
      "name": "proposeGame",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "gameId",
          "type": "uint256"
        }
      ],
      "name": "revealOutcome",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "test",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "timelockBlocks",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "transactionHash": "0xb5f057b914f42cddb3c7fcdb7f1ad3455196d7a96325014b68c7313f792a11e7",
  "receipt": {
    "to": null,
    "from": null,
    "contractAddress": "0xA8FCcd8B3b0e5b68E9171585fF6b2D514dc2e3a2",
    "transactionIndex": 0,
    "gasUsed": "1473277",
    "logsBloom": "0x
    "blockHash": "0xf91812721c9e722a750b5869a352d29817145b0990be18e103487b99f814a687",
    "transactionHash": "0xb5f057b914f42cddb3c7fcdb7f1ad3455196d7a96325014b68c7313f792a11e7",
    "logs": [],
    "blockNumber": 172118,
    "cumulativeGasUsed": "1473277",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x7d671aed0E98286525a94b2F56422375EFc79886",
    100
  ],
  "numDeployments": 2,
  "solcInputHash": "a70ccad94e1e1d9aab744e82a6f30e28",
  "metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"_footballCoin\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_timelockBlocks\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"gameId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"wagerAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"blockNumber\",\"type\":\"uint256\"}],\"name\":\"GameAccepted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"gameId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"}],\"name\":\"GameFinished\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"gameId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"}],\"name\":\"GameFinishedByTimelock\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"gameId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"wagerAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"blockNumber\",\"type\":\"uint256\"}],\"name\":\"GameProposed\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"gameId\",\"type\":\"uint256\"},{\"internalType\":\"uint256[]\",\"name\":\"formation\",\"type\":\"uint256[]\"}],\"name\":\"acceptGame\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"playerId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"teamId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"position\",\"type\":\"uint256\"},{\"internalType\":\"uint128\",\"name\":\"attack\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"defense\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"speed\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"power\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"stamina\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"technique\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"goalkeeping\",\"type\":\"uint128\"}],\"name\":\"addPlayer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"footballCoin\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"gameCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"games\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"gameId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"challenger\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"opponent\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"wagerAmount\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"goalsHomeTeam\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"goalsAwayTeam\",\"type\":\"uint256\"}],\"internalType\":\"struct FootballGame.GameResult\",\"name\":\"result\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"blockNumber\",\"type\":\"uint256\"},{\"internalType\":\"enum FootballGame.Status\",\"name\":\"status\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getGameCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"ignore\",\"outputs\":[],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"gameId\",\"type\":\"uint256\"}],\"name\":\"opponentClaimTimelock\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"players\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"player_id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"team_id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"position\",\"type\":\"uint256\"},{\"internalType\":\"uint128\",\"name\":\"attack\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"defense\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"speed\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"power\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"stamina\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"technique\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"goalkeeping\",\"type\":\"uint128\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"opponent\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"wagerAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256[]\",\"name\":\"formation\",\"type\":\"uint256[]\"}],\"name\":\"proposeGame\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"gameId\",\"type\":\"uint256\"}],\"name\":\"revealOutcome\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"test\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"timelockBlocks\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/FootballGame.sol\":\"FootballGame\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `from` to `to` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address from, address to, uint256 amount) external returns (bool);\\n}\\n\",\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\"},\"contracts/FootballGame.sol\":{\"content\":\"//SPDX-License-Identifier: MIT\\npragma solidity >=0.8.0 <0.9.0;\\nimport \\\"@openzeppelin/contracts/token/ERC20/IERC20.sol\\\";\\n\\ncontract FootballGame {\\n\\taddress public owner;\\n\\tIERC20 public footballCoin;\\n\\tuint public timelockBlocks;\\n\\n\\tenum Status {\\n\\t\\tProposed,\\n\\t\\tAccepted,\\n\\t\\tFinished,\\n\\t\\tFinishedByTimelock\\n\\t}\\n\\n\\tstruct Game {\\n\\t\\tuint256 gameId;\\n\\t\\taddress challenger;\\n\\t\\taddress opponent;\\n\\t\\tuint256 wagerAmount;\\n\\t\\tuint256[] challengerFormation;\\n\\t\\tuint256[] opponentFormation;\\n\\t\\tGameResult result;\\n\\t\\tuint blockNumber;\\n\\t\\tStatus status;\\n\\t}\\n\\n\\tstruct GameResult {\\n\\t\\tuint goalsHomeTeam;\\n\\t\\tuint goalsAwayTeam;\\n\\t}\\n\\n\\t///////////////\\n\\t// MAPPINGS  //\\n\\t///////////////\\n\\n\\tmapping(uint256 => uint256[]) private challenger_formation;\\n\\tmapping(uint256 => Game) public games;\\n\\tuint256 public gameCount;\\n\\tbool public test;\\n\\n\\tfunction getGameCount() public view returns (uint256) {\\n\\t\\treturn gameCount;\\n\\t}\\n\\n\\tfunction ignore() public view {}\\n\\n\\t///////////////\\n\\t// EVENTS  //\\n\\t///////////////\\n\\n\\tevent GameProposed(\\n\\t\\tuint256 gameId,\\n\\t\\taddress indexed sender,\\n\\t\\taddress indexed recipient,\\n\\t\\tuint256 wagerAmount,\\n\\t\\tuint blockNumber\\n\\t);\\n\\n\\tevent GameAccepted(\\n\\t\\tuint256 gameId,\\n\\t\\taddress indexed sender,\\n\\t\\taddress indexed recipient,\\n\\t\\tuint256 wagerAmount,\\n\\t\\tuint blockNumber\\n\\t);\\n\\n\\tevent GameFinished(\\n\\t\\tuint256 gameId,\\n\\t\\taddress indexed sender,\\n\\t\\taddress indexed recipient\\n\\t);\\n\\n\\tevent GameFinishedByTimelock(\\n\\t\\tuint256 gameId,\\n\\t\\taddress indexed sender,\\n\\t\\taddress indexed recipient\\n\\t);\\n\\n\\t///////////////\\n\\t// PLAYERS   //\\n\\t///////////////\\n\\n\\tstruct Player {\\n\\t\\tuint256 player_id;\\n\\t\\tuint256 team_id;\\n\\t\\tuint256 position; // 0 = Empty, 1 = Goalkeeper, 2 = Defense, 3 = Midfield, 4 = Attack\\n\\t\\tuint128 attack;\\n\\t\\tuint128 defense;\\n\\t\\tuint128 speed;\\n\\t\\tuint128 power;\\n\\t\\tuint128 stamina;\\n\\t\\tuint128 technique;\\n\\t\\tuint128 goalkeeping;\\n\\t}\\n\\n\\tmapping(uint256 => Player) public players;\\n\\n\\tfunction addPlayer(\\n\\t\\tuint256 playerId,\\n\\t\\tuint256 teamId,\\n\\t\\tuint256 position,\\n\\t\\tuint128 attack,\\n\\t\\tuint128 defense,\\n\\t\\tuint128 speed,\\n\\t\\tuint128 power,\\n\\t\\tuint128 stamina,\\n\\t\\tuint128 technique,\\n\\t\\tuint128 goalkeeping\\n\\t) public onlyOwner {\\n\\t\\tPlayer memory newPlayer = Player({\\n\\t\\t\\tplayer_id: playerId,\\n\\t\\t\\tteam_id: teamId,\\n\\t\\t\\tposition: position,\\n\\t\\t\\tattack: attack,\\n\\t\\t\\tdefense: defense,\\n\\t\\t\\tspeed: speed,\\n\\t\\t\\tpower: power,\\n\\t\\t\\tstamina: stamina,\\n\\t\\t\\ttechnique: technique,\\n\\t\\t\\tgoalkeeping: goalkeeping\\n\\t\\t});\\n\\n\\t\\tplayers[playerId] = newPlayer;\\n\\t}\\n\\n\\t///////////////\\n\\t// CONSTRUCTOR  //\\n\\t///////////////\\n\\n\\tconstructor(IERC20 _footballCoin, uint _timelockBlocks) {\\n\\t\\towner = msg.sender;\\n\\t\\tfootballCoin = _footballCoin;\\n\\t\\ttimelockBlocks = _timelockBlocks;\\n\\t}\\n\\tmodifier onlyOwner() {\\n\\t\\trequire(msg.sender == owner, \\\"Caller is not the owner\\\");\\n\\t\\t_;\\n\\t}\\n\\n\\t///////////////\\n\\t// GAME FUNCTIONS  //\\n\\t///////////////\\n\\n\\tfunction proposeGame(\\n\\t\\taddress opponent,\\n\\t\\tuint256 wagerAmount,\\n\\t\\tuint256[] memory formation\\n\\t) public {\\n\\t\\trequire(\\n\\t\\t\\tfootballCoin.allowance(msg.sender, address(this)) >= wagerAmount,\\n\\t\\t\\t\\\"Insufficient allowance for wager\\\"\\n\\t\\t);\\n\\t\\tfor (uint i = 0; i < formation.length; i++) {\\n\\t\\t\\trequire(players[formation[i]].player_id != 0, \\\"Invalid player id\\\");\\n\\t\\t}\\n\\n\\t\\t// Transfer the wager amount from the challenger to the contract\\n\\t\\tfootballCoin.transferFrom(msg.sender, address(this), wagerAmount);\\n\\n\\t\\tuint256 newGameId = ++gameCount;\\n\\t\\tgames[newGameId] = Game({\\n\\t\\t\\tgameId: newGameId,\\n\\t\\t\\tchallenger: msg.sender,\\n\\t\\t\\topponent: opponent,\\n\\t\\t\\twagerAmount: wagerAmount,\\n\\t\\t\\tchallengerFormation: new uint256[](0),\\n\\t\\t\\topponentFormation: new uint256[](0),\\n\\t\\t\\tresult: GameResult({ goalsHomeTeam: 0, goalsAwayTeam: 0 }),\\n\\t\\t\\tblockNumber: block.number,\\n\\t\\t\\tstatus: Status.Proposed\\n\\t\\t});\\n\\n\\t\\tchallenger_formation[newGameId] = formation;\\n\\n\\t\\t// Emitting events to notify about the new game proposal\\n\\t\\temit GameProposed(\\n\\t\\t\\tnewGameId,\\n\\t\\t\\tmsg.sender,\\n\\t\\t\\topponent,\\n\\t\\t\\twagerAmount,\\n\\t\\t\\tblock.number\\n\\t\\t);\\n\\t}\\n\\n\\tfunction acceptGame(uint256 gameId, uint256[] memory formation) public {\\n\\t\\tGame storage game = games[gameId];\\n\\n\\t\\trequire(\\n\\t\\t\\tmsg.sender == game.opponent,\\n\\t\\t\\t\\\"Only the opponent can accept the game\\\"\\n\\t\\t);\\n\\t\\trequire(\\n\\t\\t\\tfootballCoin.allowance(msg.sender, address(this)) >=\\n\\t\\t\\t\\tgame.wagerAmount,\\n\\t\\t\\t\\\"Insufficient allowance for wager\\\"\\n\\t\\t);\\n\\t\\trequire(game.status == Status.Proposed, \\\"Incorrect state\\\");\\n\\n\\t\\tfor (uint i = 0; i < formation.length; i++) {\\n\\t\\t\\trequire(players[formation[i]].player_id != 0, \\\"Invalid player id\\\");\\n\\t\\t}\\n\\n\\t\\t// Transfer the wager amount from the opponent to the contract\\n\\t\\tfootballCoin.transferFrom(msg.sender, address(this), game.wagerAmount);\\n\\n\\t\\tgame.opponentFormation = formation;\\n\\t\\tgame.blockNumber = block.number;\\n\\t\\tgame.status = Status.Accepted;\\n\\n\\t\\t// Notify about game acceptance\\n\\t\\temit GameAccepted(\\n\\t\\t\\tgameId,\\n\\t\\t\\tmsg.sender,\\n\\t\\t\\tgame.challenger,\\n\\t\\t\\tgame.wagerAmount,\\n\\t\\t\\tblock.number\\n\\t\\t);\\n\\t}\\n\\n\\tfunction revealOutcome(uint256 gameId) public {\\n\\t\\tGame storage game = games[gameId];\\n\\n\\t\\trequire(\\n\\t\\t\\tmsg.sender == game.challenger,\\n\\t\\t\\t\\\"Only the challenger can reveal the outcome\\\"\\n\\t\\t);\\n\\t\\trequire(game.status == Status.Accepted, \\\"Incorrect state\\\");\\n\\n\\t\\tgame.challengerFormation = challenger_formation[gameId];\\n\\n\\t\\tGameResult memory result = determineGameResult(game);\\n\\t\\tgame.result = result;\\n\\n\\t\\tgame.status = Status.Finished;\\n\\n\\t\\taddress winner = determineWinner(game, result);\\n\\t\\tpayoutWinners(game, winner);\\n\\n\\t\\temit GameFinished(gameId, msg.sender, game.opponent);\\n\\t}\\n\\n\\tfunction opponentClaimTimelock(uint256 gameId) public {\\n\\t\\tGame storage game = games[gameId];\\n\\n\\t\\trequire(\\n\\t\\t\\tmsg.sender == game.opponent,\\n\\t\\t\\t\\\"Only the opponent can claim the timelock\\\"\\n\\t\\t);\\n\\t\\trequire(\\n\\t\\t\\tblock.number > game.blockNumber + timelockBlocks,\\n\\t\\t\\t\\\"Opponent can claim timelock only after timelockBlocks have passed\\\"\\n\\t\\t);\\n\\n\\t\\tgame.status = Status.FinishedByTimelock;\\n\\n\\t\\tpayoutWinners(game, game.opponent);\\n\\n\\t\\temit GameFinishedByTimelock(gameId, msg.sender, game.challenger);\\n\\t}\\n\\n\\t///////////////\\n\\t// HELPER FUNCTIONS  //\\n\\t///////////////\\n\\n\\tfunction determineGameResult(\\n\\t\\tGame storage game\\n\\t) private view returns (GameResult memory) {\\n\\t\\tGameResult memory result = GameResult({\\n\\t\\t\\tgoalsHomeTeam: 0,\\n\\t\\t\\tgoalsAwayTeam: 0\\n\\t\\t});\\n\\n\\t\\t// Player memory homeGoalkeeper = players[game.challengerFormation[1]];\\n\\t\\t// Player memory awayGoalkeeper = players[game.opponentFormation[1]];\\n\\t\\tbytes32 prevRandao = blockhash(block.number - 1);\\n\\t\\tfor (uint i = 1; i < game.challengerFormation.length; i++) {\\n\\t\\t\\tPlayer memory homePlayer = players[game.challengerFormation[i]];\\n\\t\\t\\tPlayer memory awayPlayer = players[\\n\\t\\t\\t\\tgame.opponentFormation[game.challengerFormation.length - i]\\n\\t\\t\\t];\\n\\t\\t\\tuint256 totalspeed = homePlayer.speed + awayPlayer.speed;\\n\\t\\t\\tuint256 randomSpeed = uint256(prevRandao) % totalspeed;\\n\\t\\t\\tif (homePlayer.speed < randomSpeed) {\\n\\t\\t\\t\\t// Home player attacks\\n\\t\\t\\t\\tif (homePlayer.attack > awayPlayer.defense) {\\n\\t\\t\\t\\t\\tresult.goalsHomeTeam++;\\n\\t\\t\\t\\t}\\n\\t\\t\\t} else {\\n\\t\\t\\t\\t// Away player attacks\\n\\t\\t\\t\\tif (awayPlayer.attack > homePlayer.defense) {\\n\\t\\t\\t\\t\\tresult.goalsAwayTeam++;\\n\\t\\t\\t\\t}\\n\\t\\t\\t}\\n\\t\\t}\\n\\n\\t\\treturn result;\\n\\t}\\n\\n\\tfunction determineWinner(\\n\\t\\tGame storage game,\\n\\t\\tGameResult memory result\\n\\t) private view returns (address) {\\n\\t\\tif (result.goalsHomeTeam > result.goalsAwayTeam) {\\n\\t\\t\\treturn game.challenger;\\n\\t\\t} else if (result.goalsHomeTeam < result.goalsAwayTeam) {\\n\\t\\t\\treturn game.opponent;\\n\\t\\t}\\n\\t\\treturn address(0); // It's a draw\\n\\t}\\n\\n\\tfunction payoutWinners(Game storage game, address winner) private {\\n\\t\\tif (winner == address(0)) {\\n\\t\\t\\trequire(\\n\\t\\t\\t\\tfootballCoin.transfer(game.challenger, game.wagerAmount),\\n\\t\\t\\t\\t\\\"Transfer to challenger failed\\\"\\n\\t\\t\\t);\\n\\t\\t\\trequire(\\n\\t\\t\\t\\tfootballCoin.transfer(game.opponent, game.wagerAmount),\\n\\t\\t\\t\\t\\\"Transfer to opponent failed\\\"\\n\\t\\t\\t);\\n\\t\\t} else {\\n\\t\\t\\tuint256 totalPot = game.wagerAmount * 2;\\n\\t\\t\\trequire(\\n\\t\\t\\t\\tfootballCoin.transfer(winner, totalPot),\\n\\t\\t\\t\\t\\\"Transfer to winner failed\\\"\\n\\t\\t\\t);\\n\\t\\t}\\n\\t}\\n}\\n\",\"keccak256\":\"0x4e7a7058ceefc60f61a2372cd957048b7e85c77bd161e4d696f3946e585e7082\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100ea5760003560e01c8063cd86f8101161008c578063ed6f866311610066578063ed6f8663146101a7578063f71d96cb1461023b578063f8a8fd6d1461030b578063fda0f9a21461032857600080fd5b8063cd86f8101461020d578063cfb9479814610220578063e87c0ee61461023357600080fd5b806359c892a9116100c857806359c892a9146101a957806364407bad146101bc5780638da5cb5b146101e757806394b1e595146101fa57600080fd5b8063117a5b90146100ef5780634d1975b41461017d578063506d7e2d14610194575b600080fd5b6101616100fd36600461146c565b6004602090815260009182526040918290208054600182015460028301546003840154865180880190975260068501548752600785015495870195909552600884015460099094015492956001600160a01b03928316959190921693909260ff1687565b604051610174979695949392919061149b565b60405180910390f35b61018660055481565b604051908152602001610174565b6101a76101a2366004611528565b610331565b005b6101a76101b736600461167e565b610481565b6001546101cf906001600160a01b031681565b6040516001600160a01b039091168152602001610174565b6000546101cf906001600160a01b031681565b6101a761020836600461146c565b6107b7565b6101a761021b3660046116c5565b610934565b6101a761022e36600461146c565b610cc9565b600554610186565b6102ae61024936600461146c565b60076020526000908152604090208054600182015460028301546003840154600485015460058601546006909601549495939492936001600160801b0380841694600160801b948590048216948483169481900483169380841693919004811691168a565b604080519a8b5260208b0199909952978901969096526001600160801b039485166060890152928416608088015290831660a0870152821660c0860152811660e08501529081166101008401521661012082015261014001610174565b6006546103189060ff1681565b6040519015158152602001610174565b61018660025481565b6000546001600160a01b031633146103905760405162461bcd60e51b815260206004820152601760248201527f43616c6c6572206973206e6f7420746865206f776e657200000000000000000060448201526064015b60405180910390fd5b60408051610140810182528b815260208082019b8c528183019a8b526001600160801b03998a1660608301908152988a1660808301908152978a1660a08301908152968a1660c08301908152958a1660e08301908152948a166101008301908152938a16610120830190815260009d8e52600790915291909b209a518b55985160018b0155965160028a015593519251928516600160801b938616840217600389015590519051908416908416820217600487015590519251928216928216029190911760058401559051600690920180546fffffffffffffffffffffffffffffffff191692909116919091179055565b600082815260046020526040902060028101546001600160a01b031633146104f95760405162461bcd60e51b815260206004820152602560248201527f4f6e6c7920746865206f70706f6e656e742063616e20616363657074207468656044820152642067616d6560d81b6064820152608401610387565b6003810154600154604051636eb1769f60e11b81523360048201523060248201526001600160a01b039091169063dd62ed3e90604401602060405180830381865afa15801561054c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610570919061172a565b10156105be5760405162461bcd60e51b815260206004820181905260248201527f496e73756666696369656e7420616c6c6f77616e636520666f722077616765726044820152606401610387565b6000600982015460ff1660038111156105d9576105d9611485565b146106185760405162461bcd60e51b815260206004820152600f60248201526e496e636f727265637420737461746560881b6044820152606401610387565b60005b82518110156106a9576007600084838151811061063a5761063a611743565b60200260200101518152602001908152602001600020600001546000036106975760405162461bcd60e51b8152602060048201526011602482015270125b9d985b1a59081c1b185e595c881a59607a1b6044820152606401610387565b806106a18161176f565b91505061061b565b5060015460038201546040516323b872dd60e01b815233600482015230602482015260448101919091526001600160a01b03909116906323b872dd906064016020604051808303816000875af1158015610707573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061072b9190611788565b50815161074190600583019060208501906113cc565b50436008820181905560098201805460ff1916600190811790915582015460038301546040805187815260208101929092528101929092526001600160a01b03169033907f3f9bd1ba680334360f5cfe7c55feb3bb67931ebd35c2020b389a5a52a9cc1eb49060600160405180910390a3505050565b600081815260046020526040902060028101546001600160a01b031633146108325760405162461bcd60e51b815260206004820152602860248201527f4f6e6c7920746865206f70706f6e656e742063616e20636c61696d207468652060448201526774696d656c6f636b60c01b6064820152608401610387565b600254816008015461084491906117b1565b43116108c25760405162461bcd60e51b815260206004820152604160248201527f4f70706f6e656e742063616e20636c61696d2074696d656c6f636b206f6e6c7960448201527f2061667465722074696d656c6f636b426c6f636b7320686176652070617373656064820152601960fa1b608482015260a401610387565b60098101805460ff1916600317905560028101546108ea9082906001600160a01b0316610e47565b60018101546040518381526001600160a01b039091169033907fb6f60e952021d7bcf89b0cc9d3fac667423e6df8dba9bfeedca45c5b8c166adf9060200160405180910390a35050565b600154604051636eb1769f60e11b815233600482015230602482015283916001600160a01b03169063dd62ed3e90604401602060405180830381865afa158015610982573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109a6919061172a565b10156109f45760405162461bcd60e51b815260206004820181905260248201527f496e73756666696369656e7420616c6c6f77616e636520666f722077616765726044820152606401610387565b60005b8151811015610a855760076000838381518110610a1657610a16611743565b6020026020010151815260200190815260200160002060000154600003610a735760405162461bcd60e51b8152602060048201526011602482015270125b9d985b1a59081c1b185e595c881a59607a1b6044820152606401610387565b80610a7d8161176f565b9150506109f7565b506001546040516323b872dd60e01b8152336004820152306024820152604481018490526001600160a01b03909116906323b872dd906064016020604051808303816000875af1158015610add573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b019190611788565b506000600560008154610b139061176f565b918290555060408051610120810182528281523360208083019182526001600160a01b03898116848601908152606085018a81528651600080825281860189526080880191825288518181528087018a5260a08901528851808a018a5281815280870182905260c08901524360e0890152610100880181905289815260048087529890208751815595516001870180549186166001600160a01b03199283161790559251600287018054919095169316929092179092559051600384015551805195965092949193610beb93908501929101906113cc565b5060a08201518051610c079160058401916020909101906113cc565b5060c08201518051600683015560200151600782015560e0820151600882015561010082015160098201805460ff19166001836003811115610c4b57610c4b611485565b0217905550505060008181526003602090815260409091208351610c71928501906113cc565b50604080518281526020810185905243918101919091526001600160a01b0385169033907f02c4c4ed29b388428cf1564d10b179c4153a007fb74269c8cc4681465146f50a906060015b60405180910390a350505050565b600081815260046020526040902060018101546001600160a01b03163314610d465760405162461bcd60e51b815260206004820152602a60248201527f4f6e6c7920746865206368616c6c656e6765722063616e2072657665616c20746044820152696865206f7574636f6d6560b01b6064820152608401610387565b6001600982015460ff166003811115610d6157610d61611485565b14610da05760405162461bcd60e51b815260206004820152600f60248201526e496e636f727265637420737461746560881b6044820152606401610387565b60008281526003602052604090208054610dbe916004840191611417565b506000610dca826110d0565b805160068401556020810151600784015560098301805460ff1916600217905590506000610df8838361137b565b9050610e048382610e47565b60028301546040518581526001600160a01b039091169033907f242f4c122901edd03165283a5957c7f0445c5227fdaebe5fc500f2c62c61ae0990602001610cbb565b6001600160a01b038116610ff3576001805490830154600384015460405163a9059cbb60e01b81526001600160a01b039283166004820152602481019190915291169063a9059cbb906044016020604051808303816000875af1158015610eb2573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ed69190611788565b610f225760405162461bcd60e51b815260206004820152601d60248201527f5472616e7366657220746f206368616c6c656e676572206661696c65640000006044820152606401610387565b6001546002830154600384015460405163a9059cbb60e01b81526001600160a01b039283166004820152602481019190915291169063a9059cbb906044016020604051808303816000875af1158015610f7f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610fa39190611788565b610fef5760405162461bcd60e51b815260206004820152601b60248201527f5472616e7366657220746f206f70706f6e656e74206661696c656400000000006044820152606401610387565b5050565b60008260030154600261100691906117c4565b60015460405163a9059cbb60e01b81526001600160a01b0385811660048301526024820184905292935091169063a9059cbb906044016020604051808303816000875af115801561105b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061107f9190611788565b6110cb5760405162461bcd60e51b815260206004820152601960248201527f5472616e7366657220746f2077696e6e6572206661696c6564000000000000006044820152606401610387565b505050565b6040805180820190915260008082526020820152604080518082019091526000808252602082018190526111056001436117db565b40905060015b60048501548110156113725760006007600087600401848154811061113257611132611743565b6000918252602080832090910154835282810193909352604091820181208251610140810184528154815260018201549481019490945260028101549284019290925260038201546001600160801b038082166060860152600160801b918290048116608086015260048085015480831660a0880152839004821660c087015260058086015480841660e08901529390930482166101008701526006909401541661012085015291890154929350916007918391908a01906111f59087906117db565b8154811061120557611205611743565b6000918252602080832090910154835282810193909352604091820181208251610140810184528154815260018201549481019490945260028101549284019290925260038201546001600160801b038082166060860152600160801b9182900481166080860152600484015480821660a080880182905291849004831660c0880152600586015480841660e08901529390930482166101008701526006909401541661012085015291850151929350916112c091906117ee565b6001600160801b0316905060006112d78287611815565b9050808460a001516001600160801b031610156113255782608001516001600160801b031684606001516001600160801b031611156113205786518761131c8261176f565b9052505b61135b565b83608001516001600160801b031683606001516001600160801b0316111561135b57602087018051906113578261176f565b9052505b50505050808061136a9061176f565b91505061110b565b50909392505050565b60008160200151826000015111156113a1575060018201546001600160a01b03166113c6565b6020820151825110156113c2575060028201546001600160a01b03166113c6565b5060005b92915050565b828054828255906000526020600020908101928215611407579160200282015b828111156114075782518255916020019190600101906113ec565b50611413929150611457565b5090565b8280548282559060005260206000209081019282156114075760005260206000209182015b8281111561140757825482559160010191906001019061143c565b5b808211156114135760008155600101611458565b60006020828403121561147e57600080fd5b5035919050565b634e487b7160e01b600052602160045260246000fd5b8781526001600160a01b038781166020808401919091529087166040830152606082018690528451608083015284015160a082015260c081018390526101008101600483106114fa57634e487b7160e01b600052602160045260246000fd5b8260e083015298975050505050505050565b80356001600160801b038116811461152357600080fd5b919050565b6000806000806000806000806000806101408b8d03121561154857600080fd5b8a35995060208b0135985060408b0135975061156660608c0161150c565b965061157460808c0161150c565b955061158260a08c0161150c565b945061159060c08c0161150c565b935061159e60e08c0161150c565b92506115ad6101008c0161150c565b91506115bc6101208c0161150c565b90509295989b9194979a5092959850565b634e487b7160e01b600052604160045260246000fd5b600082601f8301126115f457600080fd5b8135602067ffffffffffffffff80831115611611576116116115cd565b8260051b604051601f19603f83011681018181108482111715611636576116366115cd565b60405293845285810183019383810192508785111561165457600080fd5b83870191505b848210156116735781358352918301919083019061165a565b979650505050505050565b6000806040838503121561169157600080fd5b82359150602083013567ffffffffffffffff8111156116af57600080fd5b6116bb858286016115e3565b9150509250929050565b6000806000606084860312156116da57600080fd5b83356001600160a01b03811681146116f157600080fd5b925060208401359150604084013567ffffffffffffffff81111561171457600080fd5b611720868287016115e3565b9150509250925092565b60006020828403121561173c57600080fd5b5051919050565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b60006001820161178157611781611759565b5060010190565b60006020828403121561179a57600080fd5b815180151581146117aa57600080fd5b9392505050565b808201808211156113c6576113c6611759565b80820281158282048414176113c6576113c6611759565b818103818111156113c6576113c6611759565b6001600160801b0381811683821601908082111561180e5761180e611759565b5092915050565b60008261183257634e487b7160e01b600052601260045260246000fd5b50069056fea2646970667358221220fddf00a82dc9aa58dae2fef8c557a939108759ff39ca3d9e9894faf23373671264736f6c63430008110033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 82,
        "contract": "contracts/FootballGame.sol:FootballGame",
        "label": "owner",
        "offset": 0,
        "slot": "0",
        "type": "t_address"
      },
      {
        "astId": 85,
        "contract": "contracts/FootballGame.sol:FootballGame",
        "label": "footballCoin",
        "offset": 0,
        "slot": "1",
        "type": "t_contract(IERC20)77"
      },
      {
        "astId": 87,
        "contract": "contracts/FootballGame.sol:FootballGame",
        "label": "timelockBlocks",
        "offset": 0,
        "slot": "2",
        "type": "t_uint256"
      },
      {
        "astId": 125,
        "contract": "contracts/FootballGame.sol:FootballGame",
        "label": "challenger_formation",
        "offset": 0,
        "slot": "3",
        "type": "t_mapping(t_uint256,t_array(t_uint256)dyn_storage)"
      },
      {
        "astId": 130,
        "contract": "contracts/FootballGame.sol:FootballGame",
        "label": "games",
        "offset": 0,
        "slot": "4",
        "type": "t_mapping(t_uint256,t_struct(Game)115_storage)"
      },
      {
        "astId": 132,
        "contract": "contracts/FootballGame.sol:FootballGame",
        "label": "gameCount",
        "offset": 0,
        "slot": "5",
        "type": "t_uint256"
      },
      {
        "astId": 134,
        "contract": "contracts/FootballGame.sol:FootballGame",
        "label": "test",
        "offset": 0,
        "slot": "6",
        "type": "t_bool"
      },
      {
        "astId": 212,
        "contract": "contracts/FootballGame.sol:FootballGame",
        "label": "players",
        "offset": 0,
        "slot": "7",
        "type": "t_mapping(t_uint256,t_struct(Player)207_storage)"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_uint256)dyn_storage": {
        "base": "t_uint256",
        "encoding": "dynamic_array",
        "label": "uint256[]",
        "numberOfBytes": "32"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_contract(IERC20)77": {
        "encoding": "inplace",
        "label": "contract IERC20",
        "numberOfBytes": "20"
      },
      "t_enum(Status)92": {
        "encoding": "inplace",
        "label": "enum FootballGame.Status",
        "numberOfBytes": "1"
      },
      "t_mapping(t_uint256,t_array(t_uint256)dyn_storage)": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => uint256[])",
        "numberOfBytes": "32",
        "value": "t_array(t_uint256)dyn_storage"
      },
      "t_mapping(t_uint256,t_struct(Game)115_storage)": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => struct FootballGame.Game)",
        "numberOfBytes": "32",
        "value": "t_struct(Game)115_storage"
      },
      "t_mapping(t_uint256,t_struct(Player)207_storage)": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => struct FootballGame.Player)",
        "numberOfBytes": "32",
        "value": "t_struct(Player)207_storage"
      },
      "t_struct(Game)115_storage": {
        "encoding": "inplace",
        "label": "struct FootballGame.Game",
        "members": [
          {
            "astId": 94,
            "contract": "contracts/FootballGame.sol:FootballGame",
            "label": "gameId",
            "offset": 0,
            "slot": "0",
            "type": "t_uint256"
          },
          {
            "astId": 96,
            "contract": "contracts/FootballGame.sol:FootballGame",
            "label": "challenger",
            "offset": 0,
            "slot": "1",
            "type": "t_address"
          },
          {
            "astId": 98,
            "contract": "contracts/FootballGame.sol:FootballGame",
            "label": "opponent",
            "offset": 0,
            "slot": "2",
            "type": "t_address"
          },
          {
            "astId": 100,
            "contract": "contracts/FootballGame.sol:FootballGame",
            "label": "wagerAmount",
            "offset": 0,
            "slot": "3",
            "type": "t_uint256"
          },
          {
            "astId": 103,
            "contract": "contracts/FootballGame.sol:FootballGame",
            "label": "challengerFormation",
            "offset": 0,
            "slot": "4",
            "type": "t_array(t_uint256)dyn_storage"
          },
          {
            "astId": 106,
            "contract": "contracts/FootballGame.sol:FootballGame",
            "label": "opponentFormation",
            "offset": 0,
            "slot": "5",
            "type": "t_array(t_uint256)dyn_storage"
          },
          {
            "astId": 109,
            "contract": "contracts/FootballGame.sol:FootballGame",
            "label": "result",
            "offset": 0,
            "slot": "6",
            "type": "t_struct(GameResult)120_storage"
          },
          {
            "astId": 111,
            "contract": "contracts/FootballGame.sol:FootballGame",
            "label": "blockNumber",
            "offset": 0,
            "slot": "8",
            "type": "t_uint256"
          },
          {
            "astId": 114,
            "contract": "contracts/FootballGame.sol:FootballGame",
            "label": "status",
            "offset": 0,
            "slot": "9",
            "type": "t_enum(Status)92"
          }
        ],
        "numberOfBytes": "320"
      },
      "t_struct(GameResult)120_storage": {
        "encoding": "inplace",
        "label": "struct FootballGame.GameResult",
        "members": [
          {
            "astId": 117,
            "contract": "contracts/FootballGame.sol:FootballGame",
            "label": "goalsHomeTeam",
            "offset": 0,
            "slot": "0",
            "type": "t_uint256"
          },
          {
            "astId": 119,
            "contract": "contracts/FootballGame.sol:FootballGame",
            "label": "goalsAwayTeam",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256"
          }
        ],
        "numberOfBytes": "64"
      },
      "t_struct(Player)207_storage": {
        "encoding": "inplace",
        "label": "struct FootballGame.Player",
        "members": [
          {
            "astId": 188,
            "contract": "contracts/FootballGame.sol:FootballGame",
            "label": "player_id",
            "offset": 0,
            "slot": "0",
            "type": "t_uint256"
          },
          {
            "astId": 190,
            "contract": "contracts/FootballGame.sol:FootballGame",
            "label": "team_id",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256"
          },
          {
            "astId": 192,
            "contract": "contracts/FootballGame.sol:FootballGame",
            "label": "position",
            "offset": 0,
            "slot": "2",
            "type": "t_uint256"
          },
          {
            "astId": 194,
            "contract": "contracts/FootballGame.sol:FootballGame",
            "label": "attack",
            "offset": 0,
            "slot": "3",
            "type": "t_uint128"
          },
          {
            "astId": 196,
            "contract": "contracts/FootballGame.sol:FootballGame",
            "label": "defense",
            "offset": 16,
            "slot": "3",
            "type": "t_uint128"
          },
          {
            "astId": 198,
            "contract": "contracts/FootballGame.sol:FootballGame",
            "label": "speed",
            "offset": 0,
            "slot": "4",
            "type": "t_uint128"
          },
          {
            "astId": 200,
            "contract": "contracts/FootballGame.sol:FootballGame",
            "label": "power",
            "offset": 16,
            "slot": "4",
            "type": "t_uint128"
          },
          {
            "astId": 202,
            "contract": "contracts/FootballGame.sol:FootballGame",
            "label": "stamina",
            "offset": 0,
            "slot": "5",
            "type": "t_uint128"
          },
          {
            "astId": 204,
            "contract": "contracts/FootballGame.sol:FootballGame",
            "label": "technique",
            "offset": 16,
            "slot": "5",
            "type": "t_uint128"
          },
          {
            "astId": 206,
            "contract": "contracts/FootballGame.sol:FootballGame",
            "label": "goalkeeping",
            "offset": 0,
            "slot": "6",
            "type": "t_uint128"
          }
        ],
        "numberOfBytes": "224"
      },
      "t_uint128": {
        "encoding": "inplace",
        "label": "uint128",
        "numberOfBytes": "16"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}