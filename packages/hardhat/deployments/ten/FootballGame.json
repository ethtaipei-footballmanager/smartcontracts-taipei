{
  "address": "0x40B10e8A06fBE442D82Eda1D547A278Ce372CA9A",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "contract IERC20",
          "name": "_footballCoin",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_timelockBlocks",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "gameId",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "wagerAmount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "blockNumber",
          "type": "uint256"
        }
      ],
      "name": "GameAccepted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "gameId",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        }
      ],
      "name": "GameFinished",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "gameId",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        }
      ],
      "name": "GameFinishedByTimelock",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "gameId",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "wagerAmount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "blockNumber",
          "type": "uint256"
        }
      ],
      "name": "GameProposed",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "gameId",
          "type": "uint256"
        },
        {
          "internalType": "uint256[]",
          "name": "formation",
          "type": "uint256[]"
        }
      ],
      "name": "acceptGame",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "playerId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "teamId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "position",
          "type": "uint256"
        },
        {
          "internalType": "uint128",
          "name": "attack",
          "type": "uint128"
        },
        {
          "internalType": "uint128",
          "name": "defense",
          "type": "uint128"
        },
        {
          "internalType": "uint128",
          "name": "speed",
          "type": "uint128"
        },
        {
          "internalType": "uint128",
          "name": "power",
          "type": "uint128"
        },
        {
          "internalType": "uint128",
          "name": "stamina",
          "type": "uint128"
        },
        {
          "internalType": "uint128",
          "name": "technique",
          "type": "uint128"
        },
        {
          "internalType": "uint128",
          "name": "goalkeeping",
          "type": "uint128"
        }
      ],
      "name": "addPlayer",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "footballCoin",
      "outputs": [
        {
          "internalType": "contract IERC20",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "gameCount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "games",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "gameId",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "challenger",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "opponent",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "wagerAmount",
          "type": "uint256"
        },
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "goalsHomeTeam",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "goalsAwayTeam",
              "type": "uint256"
            }
          ],
          "internalType": "struct FootballGame.GameResult",
          "name": "result",
          "type": "tuple"
        },
        {
          "internalType": "uint256",
          "name": "blockNumber",
          "type": "uint256"
        },
        {
          "internalType": "enum FootballGame.Status",
          "name": "status",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getGameCount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "gameId",
          "type": "uint256"
        }
      ],
      "name": "opponentClaimTimelock",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "players",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "player_id",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "team_id",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "position",
          "type": "uint256"
        },
        {
          "internalType": "uint128",
          "name": "attack",
          "type": "uint128"
        },
        {
          "internalType": "uint128",
          "name": "defense",
          "type": "uint128"
        },
        {
          "internalType": "uint128",
          "name": "speed",
          "type": "uint128"
        },
        {
          "internalType": "uint128",
          "name": "power",
          "type": "uint128"
        },
        {
          "internalType": "uint128",
          "name": "stamina",
          "type": "uint128"
        },
        {
          "internalType": "uint128",
          "name": "technique",
          "type": "uint128"
        },
        {
          "internalType": "uint128",
          "name": "goalkeeping",
          "type": "uint128"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "opponent",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "wagerAmount",
          "type": "uint256"
        },
        {
          "internalType": "uint256[]",
          "name": "formation",
          "type": "uint256[]"
        }
      ],
      "name": "proposeGame",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "gameId",
          "type": "uint256"
        }
      ],
      "name": "revealOutcome",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "timelockBlocks",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "transactionHash": "0xec761365ad14fca87c5dcbbe08a781b4bebe971bf88923e1ee5903fd4ad39fe0",
  "receipt": {
    "to": null,
    "from": null,
    "contractAddress": "0x40B10e8A06fBE442D82Eda1D547A278Ce372CA9A",
    "transactionIndex": 0,
    "gasUsed": "1454292",
    "logsBloom": "0x
    "blockHash": "0x2954f8381d98ab4345cb5f709fca1256ab7529db09a9a8b36fa71d5df5e05414",
    "transactionHash": "0xec761365ad14fca87c5dcbbe08a781b4bebe971bf88923e1ee5903fd4ad39fe0",
    "logs": [],
    "blockNumber": 82404,
    "cumulativeGasUsed": "1454292",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x479a15a13358561c3fe9B982b69c3da191aB4F92",
    100
  ],
  "numDeployments": 12,
  "solcInputHash": "9dde880d1facc405dc2f759889c6707a",
  "metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"_footballCoin\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_timelockBlocks\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"gameId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"wagerAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"blockNumber\",\"type\":\"uint256\"}],\"name\":\"GameAccepted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"gameId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"}],\"name\":\"GameFinished\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"gameId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"}],\"name\":\"GameFinishedByTimelock\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"gameId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"wagerAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"blockNumber\",\"type\":\"uint256\"}],\"name\":\"GameProposed\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"gameId\",\"type\":\"uint256\"},{\"internalType\":\"uint256[]\",\"name\":\"formation\",\"type\":\"uint256[]\"}],\"name\":\"acceptGame\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"playerId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"teamId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"position\",\"type\":\"uint256\"},{\"internalType\":\"uint128\",\"name\":\"attack\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"defense\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"speed\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"power\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"stamina\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"technique\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"goalkeeping\",\"type\":\"uint128\"}],\"name\":\"addPlayer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"footballCoin\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"gameCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"games\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"gameId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"challenger\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"opponent\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"wagerAmount\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"goalsHomeTeam\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"goalsAwayTeam\",\"type\":\"uint256\"}],\"internalType\":\"struct FootballGame.GameResult\",\"name\":\"result\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"blockNumber\",\"type\":\"uint256\"},{\"internalType\":\"enum FootballGame.Status\",\"name\":\"status\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getGameCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"gameId\",\"type\":\"uint256\"}],\"name\":\"opponentClaimTimelock\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"players\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"player_id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"team_id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"position\",\"type\":\"uint256\"},{\"internalType\":\"uint128\",\"name\":\"attack\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"defense\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"speed\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"power\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"stamina\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"technique\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"goalkeeping\",\"type\":\"uint128\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"opponent\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"wagerAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256[]\",\"name\":\"formation\",\"type\":\"uint256[]\"}],\"name\":\"proposeGame\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"gameId\",\"type\":\"uint256\"}],\"name\":\"revealOutcome\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"timelockBlocks\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/FootballGame.sol\":\"FootballGame\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `from` to `to` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address from, address to, uint256 amount) external returns (bool);\\n}\\n\",\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\"},\"contracts/FootballGame.sol\":{\"content\":\"//SPDX-License-Identifier: MIT\\npragma solidity >=0.8.0 <0.9.0;\\nimport \\\"@openzeppelin/contracts/token/ERC20/IERC20.sol\\\";\\n\\ncontract FootballGame {\\n\\taddress public owner;\\n\\tIERC20 public footballCoin;\\n\\tuint public timelockBlocks;\\n\\n\\tenum Status {\\n\\t\\tProposed,\\n\\t\\tAccepted,\\n\\t\\tFinished,\\n\\t\\tFinishedByTimelock\\n\\t}\\n\\n\\tstruct Game {\\n\\t\\tuint256 gameId;\\n\\t\\taddress challenger;\\n\\t\\taddress opponent;\\n\\t\\tuint256 wagerAmount;\\n\\t\\tuint256[] challengerFormation;\\n\\t\\tuint256[] opponentFormation;\\n\\t\\tGameResult result;\\n\\t\\tuint blockNumber;\\n\\t\\tStatus status;\\n\\t}\\n\\n\\tstruct GameResult {\\n\\t\\tuint goalsHomeTeam;\\n\\t\\tuint goalsAwayTeam;\\n\\t}\\n\\n\\t///////////////\\n\\t// MAPPINGS  //\\n\\t///////////////\\n\\n\\tmapping(uint256 => uint256[]) private challenger_formation;\\n\\tmapping(uint256 => Game) public games;\\n\\tuint256 public gameCount;\\n\\n\\tfunction getGameCount() public view returns (uint256) {\\n\\t\\treturn gameCount;\\n\\t}\\n\\n\\t///////////////\\n\\t// EVENTS  //\\n\\t///////////////\\n\\n\\tevent GameProposed(\\n\\t\\tuint256 gameId,\\n\\t\\taddress indexed sender,\\n\\t\\taddress indexed recipient,\\n\\t\\tuint256 wagerAmount,\\n\\t\\tuint blockNumber\\n\\t);\\n\\n\\tevent GameAccepted(\\n\\t\\tuint256 gameId,\\n\\t\\taddress indexed sender,\\n\\t\\taddress indexed recipient,\\n\\t\\tuint256 wagerAmount,\\n\\t\\tuint blockNumber\\n\\t);\\n\\n\\tevent GameFinished(\\n\\t\\tuint256 gameId,\\n\\t\\taddress indexed sender,\\n\\t\\taddress indexed recipient\\n\\t);\\n\\n\\tevent GameFinishedByTimelock(\\n\\t\\tuint256 gameId,\\n\\t\\taddress indexed sender,\\n\\t\\taddress indexed recipient\\n\\t);\\n\\n\\t///////////////\\n\\t// PLAYERS   //\\n\\t///////////////\\n\\n\\tstruct Player {\\n\\t\\tuint256 player_id;\\n\\t\\tuint256 team_id;\\n\\t\\tuint256 position; // 0 = Empty, 1 = Goalkeeper, 2 = Defense, 3 = Midfield, 4 = Attack\\n\\t\\tuint128 attack;\\n\\t\\tuint128 defense;\\n\\t\\tuint128 speed;\\n\\t\\tuint128 power;\\n\\t\\tuint128 stamina;\\n\\t\\tuint128 technique;\\n\\t\\tuint128 goalkeeping;\\n\\t}\\n\\n\\tmapping(uint256 => Player) public players;\\n\\n\\tfunction addPlayer(\\n\\t\\tuint256 playerId,\\n\\t\\tuint256 teamId,\\n\\t\\tuint256 position,\\n\\t\\tuint128 attack,\\n\\t\\tuint128 defense,\\n\\t\\tuint128 speed,\\n\\t\\tuint128 power,\\n\\t\\tuint128 stamina,\\n\\t\\tuint128 technique,\\n\\t\\tuint128 goalkeeping\\n\\t) public onlyOwner {\\n\\t\\tPlayer memory newPlayer = Player({\\n\\t\\t\\tplayer_id: playerId,\\n\\t\\t\\tteam_id: teamId,\\n\\t\\t\\tposition: position,\\n\\t\\t\\tattack: attack,\\n\\t\\t\\tdefense: defense,\\n\\t\\t\\tspeed: speed,\\n\\t\\t\\tpower: power,\\n\\t\\t\\tstamina: stamina,\\n\\t\\t\\ttechnique: technique,\\n\\t\\t\\tgoalkeeping: goalkeeping\\n\\t\\t});\\n\\n\\t\\tplayers[playerId] = newPlayer;\\n\\t}\\n\\n\\t///////////////\\n\\t// CONSTRUCTOR  //\\n\\t///////////////\\n\\n\\tconstructor(IERC20 _footballCoin, uint _timelockBlocks) {\\n\\t\\towner = msg.sender;\\n\\t\\tfootballCoin = _footballCoin;\\n\\t\\ttimelockBlocks = _timelockBlocks;\\n\\t}\\n\\tmodifier onlyOwner() {\\n\\t\\trequire(msg.sender == owner, \\\"Caller is not the owner\\\");\\n\\t\\t_;\\n\\t}\\n\\n\\t///////////////\\n\\t// GAME FUNCTIONS  //\\n\\t///////////////\\n\\n\\tfunction proposeGame(\\n\\t\\taddress opponent,\\n\\t\\tuint256 wagerAmount,\\n\\t\\tuint256[] memory formation\\n\\t) public {\\n\\t\\trequire(\\n\\t\\t\\tfootballCoin.allowance(msg.sender, address(this)) >= wagerAmount,\\n\\t\\t\\t\\\"Insufficient allowance for wager\\\"\\n\\t\\t);\\n\\t\\tfor (uint i = 0; i < formation.length; i++) {\\n\\t\\t\\trequire(players[formation[i]].player_id != 0, \\\"Invalid player id\\\");\\n\\t\\t}\\n\\n\\t\\t// Transfer the wager amount from the challenger to the contract\\n\\t\\tfootballCoin.transferFrom(msg.sender, address(this), wagerAmount);\\n\\n\\t\\tuint256 newGameId = ++gameCount;\\n\\t\\tgames[newGameId] = Game({\\n\\t\\t\\tgameId: newGameId,\\n\\t\\t\\tchallenger: msg.sender,\\n\\t\\t\\topponent: opponent,\\n\\t\\t\\twagerAmount: wagerAmount,\\n\\t\\t\\tchallengerFormation: new uint256[](0),\\n\\t\\t\\topponentFormation: new uint256[](0),\\n\\t\\t\\tresult: GameResult({ goalsHomeTeam: 0, goalsAwayTeam: 0 }),\\n\\t\\t\\tblockNumber: block.number,\\n\\t\\t\\tstatus: Status.Proposed\\n\\t\\t});\\n\\n\\t\\tchallenger_formation[newGameId] = formation;\\n\\n\\t\\t// Emitting events to notify about the new game proposal\\n\\t\\temit GameProposed(\\n\\t\\t\\tnewGameId,\\n\\t\\t\\tmsg.sender,\\n\\t\\t\\topponent,\\n\\t\\t\\twagerAmount,\\n\\t\\t\\tblock.number\\n\\t\\t);\\n\\t}\\n\\n\\tfunction acceptGame(uint256 gameId, uint256[] memory formation) public {\\n\\t\\tGame storage game = games[gameId];\\n\\n\\t\\trequire(\\n\\t\\t\\tmsg.sender == game.opponent,\\n\\t\\t\\t\\\"Only the opponent can accept the game\\\"\\n\\t\\t);\\n\\t\\trequire(\\n\\t\\t\\tfootballCoin.allowance(msg.sender, address(this)) >=\\n\\t\\t\\t\\tgame.wagerAmount,\\n\\t\\t\\t\\\"Insufficient allowance for wager\\\"\\n\\t\\t);\\n\\t\\trequire(game.status == Status.Proposed, \\\"Incorrect state\\\");\\n\\n\\t\\tfor (uint i = 0; i < formation.length; i++) {\\n\\t\\t\\trequire(players[formation[i]].player_id != 0, \\\"Invalid player id\\\");\\n\\t\\t}\\n\\n\\t\\t// Transfer the wager amount from the opponent to the contract\\n\\t\\tfootballCoin.transferFrom(msg.sender, address(this), game.wagerAmount);\\n\\n\\t\\tgame.opponentFormation = formation;\\n\\t\\tgame.blockNumber = block.number;\\n\\t\\tgame.status = Status.Accepted;\\n\\n\\t\\t// Notify about game acceptance\\n\\t\\temit GameAccepted(\\n\\t\\t\\tgameId,\\n\\t\\t\\tmsg.sender,\\n\\t\\t\\tgame.challenger,\\n\\t\\t\\tgame.wagerAmount,\\n\\t\\t\\tblock.number\\n\\t\\t);\\n\\t}\\n\\n\\tfunction revealOutcome(uint256 gameId) public {\\n\\t\\tGame storage game = games[gameId];\\n\\n\\t\\trequire(\\n\\t\\t\\tmsg.sender == game.challenger,\\n\\t\\t\\t\\\"Only the challenger can reveal the outcome\\\"\\n\\t\\t);\\n\\t\\trequire(game.status == Status.Accepted, \\\"Incorrect state\\\");\\n\\n\\t\\tgame.challengerFormation = challenger_formation[gameId];\\n\\n\\t\\tGameResult memory result = determineGameResult(game);\\n\\t\\tgame.result = result;\\n\\n\\t\\tgame.status = Status.Finished;\\n\\n\\t\\taddress winner = determineWinner(game, result);\\n\\t\\tpayoutWinners(game, winner);\\n\\n\\t\\temit GameFinished(gameId, msg.sender, game.opponent);\\n\\t}\\n\\n\\tfunction opponentClaimTimelock(uint256 gameId) public {\\n\\t\\tGame storage game = games[gameId];\\n\\n\\t\\trequire(\\n\\t\\t\\tmsg.sender == game.opponent,\\n\\t\\t\\t\\\"Only the opponent can claim the timelock\\\"\\n\\t\\t);\\n\\t\\trequire(\\n\\t\\t\\tblock.number > game.blockNumber + timelockBlocks,\\n\\t\\t\\t\\\"Opponent can claim timelock only after timelockBlocks have passed\\\"\\n\\t\\t);\\n\\n\\t\\tgame.status = Status.FinishedByTimelock;\\n\\n\\t\\tpayoutWinners(game, game.opponent);\\n\\n\\t\\temit GameFinishedByTimelock(gameId, msg.sender, game.challenger);\\n\\t}\\n\\n\\t///////////////\\n\\t// HELPER FUNCTIONS  //\\n\\t///////////////\\n\\n\\tfunction determineGameResult(\\n\\t\\tGame storage game\\n\\t) private view returns (GameResult memory) {\\n\\t\\tGameResult memory result = GameResult({\\n\\t\\t\\tgoalsHomeTeam: 0,\\n\\t\\t\\tgoalsAwayTeam: 0\\n\\t\\t});\\n\\n\\t\\t// Player memory homeGoalkeeper = players[game.challengerFormation[1]];\\n\\t\\t// Player memory awayGoalkeeper = players[game.opponentFormation[1]];\\n\\t\\tbytes32 prevRandao = blockhash(block.number - 1);\\n\\t\\tfor (uint i = 1; i < game.challengerFormation.length; i++) {\\n\\t\\t\\tPlayer memory homePlayer = players[game.challengerFormation[i]];\\n\\t\\t\\tPlayer memory awayPlayer = players[\\n\\t\\t\\t\\tgame.opponentFormation[game.challengerFormation.length - i]\\n\\t\\t\\t];\\n\\t\\t\\tuint256 totalspeed = homePlayer.speed + awayPlayer.speed;\\n\\t\\t\\tuint256 randomSpeed = uint256(prevRandao) % totalspeed;\\n\\t\\t\\tif (homePlayer.speed < randomSpeed) {\\n\\t\\t\\t\\t// Home player attacks\\n\\t\\t\\t\\tif (homePlayer.attack > awayPlayer.defense) {\\n\\t\\t\\t\\t\\tresult.goalsHomeTeam++;\\n\\t\\t\\t\\t}\\n\\t\\t\\t} else {\\n\\t\\t\\t\\t// Away player attacks\\n\\t\\t\\t\\tif (awayPlayer.attack > homePlayer.defense) {\\n\\t\\t\\t\\t\\tresult.goalsAwayTeam++;\\n\\t\\t\\t\\t}\\n\\t\\t\\t}\\n\\t\\t}\\n\\n\\t\\treturn result;\\n\\t}\\n\\n\\tfunction determineWinner(\\n\\t\\tGame storage game,\\n\\t\\tGameResult memory result\\n\\t) private view returns (address) {\\n\\t\\tif (result.goalsHomeTeam > result.goalsAwayTeam) {\\n\\t\\t\\treturn game.challenger;\\n\\t\\t} else if (result.goalsHomeTeam < result.goalsAwayTeam) {\\n\\t\\t\\treturn game.opponent;\\n\\t\\t}\\n\\t\\treturn address(0); // It's a draw\\n\\t}\\n\\n\\tfunction payoutWinners(Game storage game, address winner) private {\\n\\t\\tif (winner == address(0)) {\\n\\t\\t\\trequire(\\n\\t\\t\\t\\tfootballCoin.transfer(game.challenger, game.wagerAmount),\\n\\t\\t\\t\\t\\\"Transfer to challenger failed\\\"\\n\\t\\t\\t);\\n\\t\\t\\trequire(\\n\\t\\t\\t\\tfootballCoin.transfer(game.opponent, game.wagerAmount),\\n\\t\\t\\t\\t\\\"Transfer to opponent failed\\\"\\n\\t\\t\\t);\\n\\t\\t} else {\\n\\t\\t\\tuint256 totalPot = game.wagerAmount * 2;\\n\\t\\t\\trequire(\\n\\t\\t\\t\\tfootballCoin.transfer(winner, totalPot),\\n\\t\\t\\t\\t\\\"Transfer to winner failed\\\"\\n\\t\\t\\t);\\n\\t\\t}\\n\\t}\\n}\\n\",\"keccak256\":\"0xf702a37f14fb4adbdb8eb1225b8786aa4eb7962e8640d68dbe449f294dde076b\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b506040516118c43803806118c483398101604081905261002f91610066565b60008054336001600160a01b031991821617909155600180549091166001600160a01b0393909316929092179091556002556100a0565b6000806040838503121561007957600080fd5b82516001600160a01b038116811461009057600080fd5b6020939093015192949293505050565b611815806100af6000396000f3fe608060405234801561001057600080fd5b50600436106100b45760003560e01c806394b1e5951161007157806394b1e595146101c4578063cd86f810146101d7578063cfb94798146101ea578063e87c0ee6146101fd578063f71d96cb14610205578063fda0f9a2146102d957600080fd5b8063117a5b90146100b95780634d1975b414610147578063506d7e2d1461015e57806359c892a91461017357806364407bad146101865780638da5cb5b146101b1575b600080fd5b61012b6100c7366004611414565b6004602090815260009182526040918290208054600182015460028301546003840154865180880190975260068501548752600785015495870195909552600884015460099094015492956001600160a01b03928316959190921693909260ff1687565b60405161013e9796959493929190611443565b60405180910390f35b61015060055481565b60405190815260200161013e565b61017161016c3660046114d0565b6102e2565b005b610171610181366004611626565b61042b565b600154610199906001600160a01b031681565b6040516001600160a01b03909116815260200161013e565b600054610199906001600160a01b031681565b6101716101d2366004611414565b610761565b6101716101e536600461166d565b6108de565b6101716101f8366004611414565b610c73565b600554610150565b61027c610213366004611414565b600660208190526000918252604090912080546001820154600283015460038401546004850154600586015495909601549395929491936001600160801b0380831694600160801b9384900482169481831694918290048316938184169392909104821691168a565b604080519a8b5260208b0199909952978901969096526001600160801b039485166060890152928416608088015290831660a0870152821660c0860152811660e0850152908116610100840152166101208201526101400161013e565b61015060025481565b6000546001600160a01b031633146103415760405162461bcd60e51b815260206004820152601760248201527f43616c6c6572206973206e6f7420746865206f776e657200000000000000000060448201526064015b60405180910390fd5b60408051610140810182528b815260208082019b8c528183019a8b526001600160801b03998a1660608301908152988a1660808301908152978a1660a08301908152968a1660c08301908152958a1660e08301908152948a166101008301908152938a16610120830190815260009d8e5260069182905292909c2090518155995160018b0155975160028a015594519351938616600160801b94871685021760038901559151905190851690851683021760048701555191519183169183160217600584015590519190920180546fffffffffffffffffffffffffffffffff191691909216179055565b600082815260046020526040902060028101546001600160a01b031633146104a35760405162461bcd60e51b815260206004820152602560248201527f4f6e6c7920746865206f70706f6e656e742063616e20616363657074207468656044820152642067616d6560d81b6064820152608401610338565b6003810154600154604051636eb1769f60e11b81523360048201523060248201526001600160a01b039091169063dd62ed3e90604401602060405180830381865afa1580156104f6573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061051a91906116d2565b10156105685760405162461bcd60e51b815260206004820181905260248201527f496e73756666696369656e7420616c6c6f77616e636520666f722077616765726044820152606401610338565b6000600982015460ff1660038111156105835761058361142d565b146105c25760405162461bcd60e51b815260206004820152600f60248201526e496e636f727265637420737461746560881b6044820152606401610338565b60005b825181101561065357600660008483815181106105e4576105e46116eb565b60200260200101518152602001908152602001600020600001546000036106415760405162461bcd60e51b8152602060048201526011602482015270125b9d985b1a59081c1b185e595c881a59607a1b6044820152606401610338565b8061064b81611717565b9150506105c5565b5060015460038201546040516323b872dd60e01b815233600482015230602482015260448101919091526001600160a01b03909116906323b872dd906064016020604051808303816000875af11580156106b1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106d59190611730565b5081516106eb9060058301906020850190611374565b50436008820181905560098201805460ff1916600190811790915582015460038301546040805187815260208101929092528101929092526001600160a01b03169033907f3f9bd1ba680334360f5cfe7c55feb3bb67931ebd35c2020b389a5a52a9cc1eb49060600160405180910390a3505050565b600081815260046020526040902060028101546001600160a01b031633146107dc5760405162461bcd60e51b815260206004820152602860248201527f4f6e6c7920746865206f70706f6e656e742063616e20636c61696d207468652060448201526774696d656c6f636b60c01b6064820152608401610338565b60025481600801546107ee9190611759565b431161086c5760405162461bcd60e51b815260206004820152604160248201527f4f70706f6e656e742063616e20636c61696d2074696d656c6f636b206f6e6c7960448201527f2061667465722074696d656c6f636b426c6f636b7320686176652070617373656064820152601960fa1b608482015260a401610338565b60098101805460ff1916600317905560028101546108949082906001600160a01b0316610df1565b60018101546040518381526001600160a01b039091169033907fb6f60e952021d7bcf89b0cc9d3fac667423e6df8dba9bfeedca45c5b8c166adf9060200160405180910390a35050565b600154604051636eb1769f60e11b815233600482015230602482015283916001600160a01b03169063dd62ed3e90604401602060405180830381865afa15801561092c573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061095091906116d2565b101561099e5760405162461bcd60e51b815260206004820181905260248201527f496e73756666696369656e7420616c6c6f77616e636520666f722077616765726044820152606401610338565b60005b8151811015610a2f57600660008383815181106109c0576109c06116eb565b6020026020010151815260200190815260200160002060000154600003610a1d5760405162461bcd60e51b8152602060048201526011602482015270125b9d985b1a59081c1b185e595c881a59607a1b6044820152606401610338565b80610a2781611717565b9150506109a1565b506001546040516323b872dd60e01b8152336004820152306024820152604481018490526001600160a01b03909116906323b872dd906064016020604051808303816000875af1158015610a87573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610aab9190611730565b506000600560008154610abd90611717565b918290555060408051610120810182528281523360208083019182526001600160a01b03898116848601908152606085018a81528651600080825281860189526080880191825288518181528087018a5260a08901528851808a018a5281815280870182905260c08901524360e0890152610100880181905289815260048087529890208751815595516001870180549186166001600160a01b03199283161790559251600287018054919095169316929092179092559051600384015551805195965092949193610b959390850192910190611374565b5060a08201518051610bb1916005840191602090910190611374565b5060c08201518051600683015560200151600782015560e0820151600882015561010082015160098201805460ff19166001836003811115610bf557610bf561142d565b0217905550505060008181526003602090815260409091208351610c1b92850190611374565b50604080518281526020810185905243918101919091526001600160a01b0385169033907f02c4c4ed29b388428cf1564d10b179c4153a007fb74269c8cc4681465146f50a906060015b60405180910390a350505050565b600081815260046020526040902060018101546001600160a01b03163314610cf05760405162461bcd60e51b815260206004820152602a60248201527f4f6e6c7920746865206368616c6c656e6765722063616e2072657665616c20746044820152696865206f7574636f6d6560b01b6064820152608401610338565b6001600982015460ff166003811115610d0b57610d0b61142d565b14610d4a5760405162461bcd60e51b815260206004820152600f60248201526e496e636f727265637420737461746560881b6044820152606401610338565b60008281526003602052604090208054610d689160048401916113bf565b506000610d748261107a565b805160068401556020810151600784015560098301805460ff1916600217905590506000610da28383611323565b9050610dae8382610df1565b60028301546040518581526001600160a01b039091169033907f242f4c122901edd03165283a5957c7f0445c5227fdaebe5fc500f2c62c61ae0990602001610c65565b6001600160a01b038116610f9d576001805490830154600384015460405163a9059cbb60e01b81526001600160a01b039283166004820152602481019190915291169063a9059cbb906044016020604051808303816000875af1158015610e5c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e809190611730565b610ecc5760405162461bcd60e51b815260206004820152601d60248201527f5472616e7366657220746f206368616c6c656e676572206661696c65640000006044820152606401610338565b6001546002830154600384015460405163a9059cbb60e01b81526001600160a01b039283166004820152602481019190915291169063a9059cbb906044016020604051808303816000875af1158015610f29573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f4d9190611730565b610f995760405162461bcd60e51b815260206004820152601b60248201527f5472616e7366657220746f206f70706f6e656e74206661696c656400000000006044820152606401610338565b5050565b600082600301546002610fb0919061176c565b60015460405163a9059cbb60e01b81526001600160a01b0385811660048301526024820184905292935091169063a9059cbb906044016020604051808303816000875af1158015611005573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110299190611730565b6110755760405162461bcd60e51b815260206004820152601960248201527f5472616e7366657220746f2077696e6e6572206661696c6564000000000000006044820152606401610338565b505050565b6040805180820190915260008082526020820152604080518082019091526000808252602082018190526110af600143611783565b40905060015b600485015481101561131a576000600660008760040184815481106110dc576110dc6116eb565b6000918252602080832090910154835282810193909352604091820181208251610140810184528154815260018201549481019490945260028101549284019290925260038201546001600160801b038082166060860152600160801b918290048116608086015260048085015480831660a0880152839004821660c087015260058086015480841660e08901529390930482166101008701526006948501549091166101208601528a0154939450909283918a019061119d908790611783565b815481106111ad576111ad6116eb565b6000918252602080832090910154835282810193909352604091820181208251610140810184528154815260018201549481019490945260028101549284019290925260038201546001600160801b038082166060860152600160801b9182900481166080860152600484015480821660a080880182905291849004831660c0880152600586015480841660e08901529390930482166101008701526006909401541661012085015291850151929350916112689190611796565b6001600160801b03169050600061127f82876117bd565b9050808460a001516001600160801b031610156112cd5782608001516001600160801b031684606001516001600160801b031611156112c8578651876112c482611717565b9052505b611303565b83608001516001600160801b031683606001516001600160801b0316111561130357602087018051906112ff82611717565b9052505b50505050808061131290611717565b9150506110b5565b50909392505050565b6000816020015182600001511115611349575060018201546001600160a01b031661136e565b60208201518251101561136a575060028201546001600160a01b031661136e565b5060005b92915050565b8280548282559060005260206000209081019282156113af579160200282015b828111156113af578251825591602001919060010190611394565b506113bb9291506113ff565b5090565b8280548282559060005260206000209081019282156113af5760005260206000209182015b828111156113af5782548255916001019190600101906113e4565b5b808211156113bb5760008155600101611400565b60006020828403121561142657600080fd5b5035919050565b634e487b7160e01b600052602160045260246000fd5b8781526001600160a01b038781166020808401919091529087166040830152606082018690528451608083015284015160a082015260c081018390526101008101600483106114a257634e487b7160e01b600052602160045260246000fd5b8260e083015298975050505050505050565b80356001600160801b03811681146114cb57600080fd5b919050565b6000806000806000806000806000806101408b8d0312156114f057600080fd5b8a35995060208b0135985060408b0135975061150e60608c016114b4565b965061151c60808c016114b4565b955061152a60a08c016114b4565b945061153860c08c016114b4565b935061154660e08c016114b4565b92506115556101008c016114b4565b91506115646101208c016114b4565b90509295989b9194979a5092959850565b634e487b7160e01b600052604160045260246000fd5b600082601f83011261159c57600080fd5b8135602067ffffffffffffffff808311156115b9576115b9611575565b8260051b604051601f19603f830116810181811084821117156115de576115de611575565b6040529384528581018301938381019250878511156115fc57600080fd5b83870191505b8482101561161b57813583529183019190830190611602565b979650505050505050565b6000806040838503121561163957600080fd5b82359150602083013567ffffffffffffffff81111561165757600080fd5b6116638582860161158b565b9150509250929050565b60008060006060848603121561168257600080fd5b83356001600160a01b038116811461169957600080fd5b925060208401359150604084013567ffffffffffffffff8111156116bc57600080fd5b6116c88682870161158b565b9150509250925092565b6000602082840312156116e457600080fd5b5051919050565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b60006001820161172957611729611701565b5060010190565b60006020828403121561174257600080fd5b8151801515811461175257600080fd5b9392505050565b8082018082111561136e5761136e611701565b808202811582820484141761136e5761136e611701565b8181038181111561136e5761136e611701565b6001600160801b038181168382160190808211156117b6576117b6611701565b5092915050565b6000826117da57634e487b7160e01b600052601260045260246000fd5b50069056fea2646970667358221220098627f48b1e72ec4e21723bc98635f0e146e3613ab4a31578bbdc7684e9c2fb64736f6c63430008110033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100b45760003560e01c806394b1e5951161007157806394b1e595146101c4578063cd86f810146101d7578063cfb94798146101ea578063e87c0ee6146101fd578063f71d96cb14610205578063fda0f9a2146102d957600080fd5b8063117a5b90146100b95780634d1975b414610147578063506d7e2d1461015e57806359c892a91461017357806364407bad146101865780638da5cb5b146101b1575b600080fd5b61012b6100c7366004611414565b6004602090815260009182526040918290208054600182015460028301546003840154865180880190975260068501548752600785015495870195909552600884015460099094015492956001600160a01b03928316959190921693909260ff1687565b60405161013e9796959493929190611443565b60405180910390f35b61015060055481565b60405190815260200161013e565b61017161016c3660046114d0565b6102e2565b005b610171610181366004611626565b61042b565b600154610199906001600160a01b031681565b6040516001600160a01b03909116815260200161013e565b600054610199906001600160a01b031681565b6101716101d2366004611414565b610761565b6101716101e536600461166d565b6108de565b6101716101f8366004611414565b610c73565b600554610150565b61027c610213366004611414565b600660208190526000918252604090912080546001820154600283015460038401546004850154600586015495909601549395929491936001600160801b0380831694600160801b9384900482169481831694918290048316938184169392909104821691168a565b604080519a8b5260208b0199909952978901969096526001600160801b039485166060890152928416608088015290831660a0870152821660c0860152811660e0850152908116610100840152166101208201526101400161013e565b61015060025481565b6000546001600160a01b031633146103415760405162461bcd60e51b815260206004820152601760248201527f43616c6c6572206973206e6f7420746865206f776e657200000000000000000060448201526064015b60405180910390fd5b60408051610140810182528b815260208082019b8c528183019a8b526001600160801b03998a1660608301908152988a1660808301908152978a1660a08301908152968a1660c08301908152958a1660e08301908152948a166101008301908152938a16610120830190815260009d8e5260069182905292909c2090518155995160018b0155975160028a015594519351938616600160801b94871685021760038901559151905190851690851683021760048701555191519183169183160217600584015590519190920180546fffffffffffffffffffffffffffffffff191691909216179055565b600082815260046020526040902060028101546001600160a01b031633146104a35760405162461bcd60e51b815260206004820152602560248201527f4f6e6c7920746865206f70706f6e656e742063616e20616363657074207468656044820152642067616d6560d81b6064820152608401610338565b6003810154600154604051636eb1769f60e11b81523360048201523060248201526001600160a01b039091169063dd62ed3e90604401602060405180830381865afa1580156104f6573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061051a91906116d2565b10156105685760405162461bcd60e51b815260206004820181905260248201527f496e73756666696369656e7420616c6c6f77616e636520666f722077616765726044820152606401610338565b6000600982015460ff1660038111156105835761058361142d565b146105c25760405162461bcd60e51b815260206004820152600f60248201526e496e636f727265637420737461746560881b6044820152606401610338565b60005b825181101561065357600660008483815181106105e4576105e46116eb565b60200260200101518152602001908152602001600020600001546000036106415760405162461bcd60e51b8152602060048201526011602482015270125b9d985b1a59081c1b185e595c881a59607a1b6044820152606401610338565b8061064b81611717565b9150506105c5565b5060015460038201546040516323b872dd60e01b815233600482015230602482015260448101919091526001600160a01b03909116906323b872dd906064016020604051808303816000875af11580156106b1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106d59190611730565b5081516106eb9060058301906020850190611374565b50436008820181905560098201805460ff1916600190811790915582015460038301546040805187815260208101929092528101929092526001600160a01b03169033907f3f9bd1ba680334360f5cfe7c55feb3bb67931ebd35c2020b389a5a52a9cc1eb49060600160405180910390a3505050565b600081815260046020526040902060028101546001600160a01b031633146107dc5760405162461bcd60e51b815260206004820152602860248201527f4f6e6c7920746865206f70706f6e656e742063616e20636c61696d207468652060448201526774696d656c6f636b60c01b6064820152608401610338565b60025481600801546107ee9190611759565b431161086c5760405162461bcd60e51b815260206004820152604160248201527f4f70706f6e656e742063616e20636c61696d2074696d656c6f636b206f6e6c7960448201527f2061667465722074696d656c6f636b426c6f636b7320686176652070617373656064820152601960fa1b608482015260a401610338565b60098101805460ff1916600317905560028101546108949082906001600160a01b0316610df1565b60018101546040518381526001600160a01b039091169033907fb6f60e952021d7bcf89b0cc9d3fac667423e6df8dba9bfeedca45c5b8c166adf9060200160405180910390a35050565b600154604051636eb1769f60e11b815233600482015230602482015283916001600160a01b03169063dd62ed3e90604401602060405180830381865afa15801561092c573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061095091906116d2565b101561099e5760405162461bcd60e51b815260206004820181905260248201527f496e73756666696369656e7420616c6c6f77616e636520666f722077616765726044820152606401610338565b60005b8151811015610a2f57600660008383815181106109c0576109c06116eb565b6020026020010151815260200190815260200160002060000154600003610a1d5760405162461bcd60e51b8152602060048201526011602482015270125b9d985b1a59081c1b185e595c881a59607a1b6044820152606401610338565b80610a2781611717565b9150506109a1565b506001546040516323b872dd60e01b8152336004820152306024820152604481018490526001600160a01b03909116906323b872dd906064016020604051808303816000875af1158015610a87573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610aab9190611730565b506000600560008154610abd90611717565b918290555060408051610120810182528281523360208083019182526001600160a01b03898116848601908152606085018a81528651600080825281860189526080880191825288518181528087018a5260a08901528851808a018a5281815280870182905260c08901524360e0890152610100880181905289815260048087529890208751815595516001870180549186166001600160a01b03199283161790559251600287018054919095169316929092179092559051600384015551805195965092949193610b959390850192910190611374565b5060a08201518051610bb1916005840191602090910190611374565b5060c08201518051600683015560200151600782015560e0820151600882015561010082015160098201805460ff19166001836003811115610bf557610bf561142d565b0217905550505060008181526003602090815260409091208351610c1b92850190611374565b50604080518281526020810185905243918101919091526001600160a01b0385169033907f02c4c4ed29b388428cf1564d10b179c4153a007fb74269c8cc4681465146f50a906060015b60405180910390a350505050565b600081815260046020526040902060018101546001600160a01b03163314610cf05760405162461bcd60e51b815260206004820152602a60248201527f4f6e6c7920746865206368616c6c656e6765722063616e2072657665616c20746044820152696865206f7574636f6d6560b01b6064820152608401610338565b6001600982015460ff166003811115610d0b57610d0b61142d565b14610d4a5760405162461bcd60e51b815260206004820152600f60248201526e496e636f727265637420737461746560881b6044820152606401610338565b60008281526003602052604090208054610d689160048401916113bf565b506000610d748261107a565b805160068401556020810151600784015560098301805460ff1916600217905590506000610da28383611323565b9050610dae8382610df1565b60028301546040518581526001600160a01b039091169033907f242f4c122901edd03165283a5957c7f0445c5227fdaebe5fc500f2c62c61ae0990602001610c65565b6001600160a01b038116610f9d576001805490830154600384015460405163a9059cbb60e01b81526001600160a01b039283166004820152602481019190915291169063a9059cbb906044016020604051808303816000875af1158015610e5c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e809190611730565b610ecc5760405162461bcd60e51b815260206004820152601d60248201527f5472616e7366657220746f206368616c6c656e676572206661696c65640000006044820152606401610338565b6001546002830154600384015460405163a9059cbb60e01b81526001600160a01b039283166004820152602481019190915291169063a9059cbb906044016020604051808303816000875af1158015610f29573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f4d9190611730565b610f995760405162461bcd60e51b815260206004820152601b60248201527f5472616e7366657220746f206f70706f6e656e74206661696c656400000000006044820152606401610338565b5050565b600082600301546002610fb0919061176c565b60015460405163a9059cbb60e01b81526001600160a01b0385811660048301526024820184905292935091169063a9059cbb906044016020604051808303816000875af1158015611005573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110299190611730565b6110755760405162461bcd60e51b815260206004820152601960248201527f5472616e7366657220746f2077696e6e6572206661696c6564000000000000006044820152606401610338565b505050565b6040805180820190915260008082526020820152604080518082019091526000808252602082018190526110af600143611783565b40905060015b600485015481101561131a576000600660008760040184815481106110dc576110dc6116eb565b6000918252602080832090910154835282810193909352604091820181208251610140810184528154815260018201549481019490945260028101549284019290925260038201546001600160801b038082166060860152600160801b918290048116608086015260048085015480831660a0880152839004821660c087015260058086015480841660e08901529390930482166101008701526006948501549091166101208601528a0154939450909283918a019061119d908790611783565b815481106111ad576111ad6116eb565b6000918252602080832090910154835282810193909352604091820181208251610140810184528154815260018201549481019490945260028101549284019290925260038201546001600160801b038082166060860152600160801b9182900481166080860152600484015480821660a080880182905291849004831660c0880152600586015480841660e08901529390930482166101008701526006909401541661012085015291850151929350916112689190611796565b6001600160801b03169050600061127f82876117bd565b9050808460a001516001600160801b031610156112cd5782608001516001600160801b031684606001516001600160801b031611156112c8578651876112c482611717565b9052505b611303565b83608001516001600160801b031683606001516001600160801b0316111561130357602087018051906112ff82611717565b9052505b50505050808061131290611717565b9150506110b5565b50909392505050565b6000816020015182600001511115611349575060018201546001600160a01b031661136e565b60208201518251101561136a575060028201546001600160a01b031661136e565b5060005b92915050565b8280548282559060005260206000209081019282156113af579160200282015b828111156113af578251825591602001919060010190611394565b506113bb9291506113ff565b5090565b8280548282559060005260206000209081019282156113af5760005260206000209182015b828111156113af5782548255916001019190600101906113e4565b5b808211156113bb5760008155600101611400565b60006020828403121561142657600080fd5b5035919050565b634e487b7160e01b600052602160045260246000fd5b8781526001600160a01b038781166020808401919091529087166040830152606082018690528451608083015284015160a082015260c081018390526101008101600483106114a257634e487b7160e01b600052602160045260246000fd5b8260e083015298975050505050505050565b80356001600160801b03811681146114cb57600080fd5b919050565b6000806000806000806000806000806101408b8d0312156114f057600080fd5b8a35995060208b0135985060408b0135975061150e60608c016114b4565b965061151c60808c016114b4565b955061152a60a08c016114b4565b945061153860c08c016114b4565b935061154660e08c016114b4565b92506115556101008c016114b4565b91506115646101208c016114b4565b90509295989b9194979a5092959850565b634e487b7160e01b600052604160045260246000fd5b600082601f83011261159c57600080fd5b8135602067ffffffffffffffff808311156115b9576115b9611575565b8260051b604051601f19603f830116810181811084821117156115de576115de611575565b6040529384528581018301938381019250878511156115fc57600080fd5b83870191505b8482101561161b57813583529183019190830190611602565b979650505050505050565b6000806040838503121561163957600080fd5b82359150602083013567ffffffffffffffff81111561165757600080fd5b6116638582860161158b565b9150509250929050565b60008060006060848603121561168257600080fd5b83356001600160a01b038116811461169957600080fd5b925060208401359150604084013567ffffffffffffffff8111156116bc57600080fd5b6116c88682870161158b565b9150509250925092565b6000602082840312156116e457600080fd5b5051919050565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b60006001820161172957611729611701565b5060010190565b60006020828403121561174257600080fd5b8151801515811461175257600080fd5b9392505050565b8082018082111561136e5761136e611701565b808202811582820484141761136e5761136e611701565b8181038181111561136e5761136e611701565b6001600160801b038181168382160190808211156117b6576117b6611701565b5092915050565b6000826117da57634e487b7160e01b600052601260045260246000fd5b50069056fea2646970667358221220098627f48b1e72ec4e21723bc98635f0e146e3613ab4a31578bbdc7684e9c2fb64736f6c63430008110033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 82,
        "contract": "contracts/FootballGame.sol:FootballGame",
        "label": "owner",
        "offset": 0,
        "slot": "0",
        "type": "t_address"
      },
      {
        "astId": 85,
        "contract": "contracts/FootballGame.sol:FootballGame",
        "label": "footballCoin",
        "offset": 0,
        "slot": "1",
        "type": "t_contract(IERC20)77"
      },
      {
        "astId": 87,
        "contract": "contracts/FootballGame.sol:FootballGame",
        "label": "timelockBlocks",
        "offset": 0,
        "slot": "2",
        "type": "t_uint256"
      },
      {
        "astId": 125,
        "contract": "contracts/FootballGame.sol:FootballGame",
        "label": "challenger_formation",
        "offset": 0,
        "slot": "3",
        "type": "t_mapping(t_uint256,t_array(t_uint256)dyn_storage)"
      },
      {
        "astId": 130,
        "contract": "contracts/FootballGame.sol:FootballGame",
        "label": "games",
        "offset": 0,
        "slot": "4",
        "type": "t_mapping(t_uint256,t_struct(Game)115_storage)"
      },
      {
        "astId": 132,
        "contract": "contracts/FootballGame.sol:FootballGame",
        "label": "gameCount",
        "offset": 0,
        "slot": "5",
        "type": "t_uint256"
      },
      {
        "astId": 206,
        "contract": "contracts/FootballGame.sol:FootballGame",
        "label": "players",
        "offset": 0,
        "slot": "6",
        "type": "t_mapping(t_uint256,t_struct(Player)201_storage)"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_uint256)dyn_storage": {
        "base": "t_uint256",
        "encoding": "dynamic_array",
        "label": "uint256[]",
        "numberOfBytes": "32"
      },
      "t_contract(IERC20)77": {
        "encoding": "inplace",
        "label": "contract IERC20",
        "numberOfBytes": "20"
      },
      "t_enum(Status)92": {
        "encoding": "inplace",
        "label": "enum FootballGame.Status",
        "numberOfBytes": "1"
      },
      "t_mapping(t_uint256,t_array(t_uint256)dyn_storage)": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => uint256[])",
        "numberOfBytes": "32",
        "value": "t_array(t_uint256)dyn_storage"
      },
      "t_mapping(t_uint256,t_struct(Game)115_storage)": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => struct FootballGame.Game)",
        "numberOfBytes": "32",
        "value": "t_struct(Game)115_storage"
      },
      "t_mapping(t_uint256,t_struct(Player)201_storage)": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => struct FootballGame.Player)",
        "numberOfBytes": "32",
        "value": "t_struct(Player)201_storage"
      },
      "t_struct(Game)115_storage": {
        "encoding": "inplace",
        "label": "struct FootballGame.Game",
        "members": [
          {
            "astId": 94,
            "contract": "contracts/FootballGame.sol:FootballGame",
            "label": "gameId",
            "offset": 0,
            "slot": "0",
            "type": "t_uint256"
          },
          {
            "astId": 96,
            "contract": "contracts/FootballGame.sol:FootballGame",
            "label": "challenger",
            "offset": 0,
            "slot": "1",
            "type": "t_address"
          },
          {
            "astId": 98,
            "contract": "contracts/FootballGame.sol:FootballGame",
            "label": "opponent",
            "offset": 0,
            "slot": "2",
            "type": "t_address"
          },
          {
            "astId": 100,
            "contract": "contracts/FootballGame.sol:FootballGame",
            "label": "wagerAmount",
            "offset": 0,
            "slot": "3",
            "type": "t_uint256"
          },
          {
            "astId": 103,
            "contract": "contracts/FootballGame.sol:FootballGame",
            "label": "challengerFormation",
            "offset": 0,
            "slot": "4",
            "type": "t_array(t_uint256)dyn_storage"
          },
          {
            "astId": 106,
            "contract": "contracts/FootballGame.sol:FootballGame",
            "label": "opponentFormation",
            "offset": 0,
            "slot": "5",
            "type": "t_array(t_uint256)dyn_storage"
          },
          {
            "astId": 109,
            "contract": "contracts/FootballGame.sol:FootballGame",
            "label": "result",
            "offset": 0,
            "slot": "6",
            "type": "t_struct(GameResult)120_storage"
          },
          {
            "astId": 111,
            "contract": "contracts/FootballGame.sol:FootballGame",
            "label": "blockNumber",
            "offset": 0,
            "slot": "8",
            "type": "t_uint256"
          },
          {
            "astId": 114,
            "contract": "contracts/FootballGame.sol:FootballGame",
            "label": "status",
            "offset": 0,
            "slot": "9",
            "type": "t_enum(Status)92"
          }
        ],
        "numberOfBytes": "320"
      },
      "t_struct(GameResult)120_storage": {
        "encoding": "inplace",
        "label": "struct FootballGame.GameResult",
        "members": [
          {
            "astId": 117,
            "contract": "contracts/FootballGame.sol:FootballGame",
            "label": "goalsHomeTeam",
            "offset": 0,
            "slot": "0",
            "type": "t_uint256"
          },
          {
            "astId": 119,
            "contract": "contracts/FootballGame.sol:FootballGame",
            "label": "goalsAwayTeam",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256"
          }
        ],
        "numberOfBytes": "64"
      },
      "t_struct(Player)201_storage": {
        "encoding": "inplace",
        "label": "struct FootballGame.Player",
        "members": [
          {
            "astId": 182,
            "contract": "contracts/FootballGame.sol:FootballGame",
            "label": "player_id",
            "offset": 0,
            "slot": "0",
            "type": "t_uint256"
          },
          {
            "astId": 184,
            "contract": "contracts/FootballGame.sol:FootballGame",
            "label": "team_id",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256"
          },
          {
            "astId": 186,
            "contract": "contracts/FootballGame.sol:FootballGame",
            "label": "position",
            "offset": 0,
            "slot": "2",
            "type": "t_uint256"
          },
          {
            "astId": 188,
            "contract": "contracts/FootballGame.sol:FootballGame",
            "label": "attack",
            "offset": 0,
            "slot": "3",
            "type": "t_uint128"
          },
          {
            "astId": 190,
            "contract": "contracts/FootballGame.sol:FootballGame",
            "label": "defense",
            "offset": 16,
            "slot": "3",
            "type": "t_uint128"
          },
          {
            "astId": 192,
            "contract": "contracts/FootballGame.sol:FootballGame",
            "label": "speed",
            "offset": 0,
            "slot": "4",
            "type": "t_uint128"
          },
          {
            "astId": 194,
            "contract": "contracts/FootballGame.sol:FootballGame",
            "label": "power",
            "offset": 16,
            "slot": "4",
            "type": "t_uint128"
          },
          {
            "astId": 196,
            "contract": "contracts/FootballGame.sol:FootballGame",
            "label": "stamina",
            "offset": 0,
            "slot": "5",
            "type": "t_uint128"
          },
          {
            "astId": 198,
            "contract": "contracts/FootballGame.sol:FootballGame",
            "label": "technique",
            "offset": 16,
            "slot": "5",
            "type": "t_uint128"
          },
          {
            "astId": 200,
            "contract": "contracts/FootballGame.sol:FootballGame",
            "label": "goalkeeping",
            "offset": 0,
            "slot": "6",
            "type": "t_uint128"
          }
        ],
        "numberOfBytes": "224"
      },
      "t_uint128": {
        "encoding": "inplace",
        "label": "uint128",
        "numberOfBytes": "16"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}