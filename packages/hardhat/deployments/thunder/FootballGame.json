{
  "address": "0x072117443CEb3920d9D95d2F005b23FeC9E761aD",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "contract IERC20",
          "name": "_footballCoin",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "gameId",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "opponent",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "wagerAmount",
          "type": "uint256"
        }
      ],
      "name": "GameAccepted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "gameId",
          "type": "uint256"
        }
      ],
      "name": "GameFinished",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "gameId",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "challenger",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "opponent",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "wagerAmount",
          "type": "uint256"
        }
      ],
      "name": "GameProposed",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "gameId",
          "type": "uint256"
        },
        {
          "internalType": "uint256[]",
          "name": "formation",
          "type": "uint256[]"
        }
      ],
      "name": "acceptGame",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "playerId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "teamId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "position",
          "type": "uint256"
        },
        {
          "internalType": "uint128",
          "name": "attack",
          "type": "uint128"
        },
        {
          "internalType": "uint128",
          "name": "defense",
          "type": "uint128"
        },
        {
          "internalType": "uint128",
          "name": "speed",
          "type": "uint128"
        },
        {
          "internalType": "uint128",
          "name": "power",
          "type": "uint128"
        },
        {
          "internalType": "uint128",
          "name": "stamina",
          "type": "uint128"
        },
        {
          "internalType": "uint128",
          "name": "technique",
          "type": "uint128"
        },
        {
          "internalType": "uint128",
          "name": "goalkeeping",
          "type": "uint128"
        }
      ],
      "name": "addPlayer",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "numberOfValues",
          "type": "uint256"
        },
        {
          "internalType": "bytes32",
          "name": "prevRandao",
          "type": "bytes32"
        }
      ],
      "name": "extractRandomValues",
      "outputs": [
        {
          "internalType": "uint256[]",
          "name": "",
          "type": "uint256[]"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "footballCoin",
      "outputs": [
        {
          "internalType": "contract IERC20",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "gameCount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "gameResults",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "goalsHomeTeam",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "goalsAwayTeam",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "games",
      "outputs": [
        {
          "internalType": "address",
          "name": "challenger",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "opponent",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "wagerAmount",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "isFinished",
          "type": "bool"
        },
        {
          "internalType": "string",
          "name": "result",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "players",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "player_id",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "team_id",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "position",
          "type": "uint256"
        },
        {
          "internalType": "uint128",
          "name": "attack",
          "type": "uint128"
        },
        {
          "internalType": "uint128",
          "name": "defense",
          "type": "uint128"
        },
        {
          "internalType": "uint128",
          "name": "speed",
          "type": "uint128"
        },
        {
          "internalType": "uint128",
          "name": "power",
          "type": "uint128"
        },
        {
          "internalType": "uint128",
          "name": "stamina",
          "type": "uint128"
        },
        {
          "internalType": "uint128",
          "name": "technique",
          "type": "uint128"
        },
        {
          "internalType": "uint128",
          "name": "goalkeeping",
          "type": "uint128"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "opponent",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "wagerAmount",
          "type": "uint256"
        },
        {
          "internalType": "uint256[]",
          "name": "formation",
          "type": "uint256[]"
        }
      ],
      "name": "proposeGame",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "gameId",
          "type": "uint256"
        }
      ],
      "name": "revealOutcome",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0x9d0f6628d3e6195bd8a0537b0a48fa5df4323b49e890f6e587a8feaefba6c2b5",
  "receipt": {
    "to": null,
    "from": "0xbb1DF1ab33786Ac6B91d9D16b445c7b66825979e",
    "contractAddress": "0x072117443CEb3920d9D95d2F005b23FeC9E761aD",
    "transactionIndex": 0,
    "gasUsed": "1546020",
    "logsBloom": "0x
    "blockHash": "0x9a6deadf54ffba64226d969de76a54f1865055c15b25f3b49d80974e00146f12",
    "transactionHash": "0x9d0f6628d3e6195bd8a0537b0a48fa5df4323b49e890f6e587a8feaefba6c2b5",
    "logs": [],
    "blockNumber": 1830501,
    "cumulativeGasUsed": "1546020",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0xc314278217Ae8D99D95BdAb3432e174A1a483Ed1"
  ],
  "numDeployments": 1,
  "solcInputHash": "d456483abada3212a8ccdc676172958d",
  "metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"_footballCoin\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"gameId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"opponent\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"wagerAmount\",\"type\":\"uint256\"}],\"name\":\"GameAccepted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"gameId\",\"type\":\"uint256\"}],\"name\":\"GameFinished\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"gameId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"challenger\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"opponent\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"wagerAmount\",\"type\":\"uint256\"}],\"name\":\"GameProposed\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"gameId\",\"type\":\"uint256\"},{\"internalType\":\"uint256[]\",\"name\":\"formation\",\"type\":\"uint256[]\"}],\"name\":\"acceptGame\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"playerId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"teamId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"position\",\"type\":\"uint256\"},{\"internalType\":\"uint128\",\"name\":\"attack\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"defense\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"speed\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"power\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"stamina\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"technique\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"goalkeeping\",\"type\":\"uint128\"}],\"name\":\"addPlayer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"numberOfValues\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"prevRandao\",\"type\":\"bytes32\"}],\"name\":\"extractRandomValues\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"footballCoin\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"gameCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"gameResults\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"goalsHomeTeam\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"goalsAwayTeam\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"games\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"challenger\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"opponent\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"wagerAmount\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"isFinished\",\"type\":\"bool\"},{\"internalType\":\"string\",\"name\":\"result\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"players\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"player_id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"team_id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"position\",\"type\":\"uint256\"},{\"internalType\":\"uint128\",\"name\":\"attack\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"defense\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"speed\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"power\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"stamina\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"technique\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"goalkeeping\",\"type\":\"uint128\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"opponent\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"wagerAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256[]\",\"name\":\"formation\",\"type\":\"uint256[]\"}],\"name\":\"proposeGame\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"gameId\",\"type\":\"uint256\"}],\"name\":\"revealOutcome\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/FootballGame.sol\":\"FootballGame\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `from` to `to` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address from, address to, uint256 amount) external returns (bool);\\n}\\n\",\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\"},\"contracts/FootballGame.sol\":{\"content\":\"//SPDX-License-Identifier: MIT\\npragma solidity >=0.8.0 <0.9.0;\\nimport \\\"@openzeppelin/contracts/token/ERC20/IERC20.sol\\\";\\n\\ncontract FootballGame {\\n\\taddress public owner;\\n\\tIERC20 public footballCoin;\\n\\n\\tstruct Game {\\n\\t\\taddress challenger;\\n\\t\\taddress opponent;\\n\\t\\tuint256 wagerAmount;\\n\\t\\tuint256[] challengerFormation;\\n\\t\\tuint256[] opponentFormation;\\n\\t\\tbool isFinished;\\n\\t\\tstring result;\\n\\t}\\n\\n\\tstruct GameResult {\\n\\t\\tuint goalsHomeTeam;\\n\\t\\tuint goalsAwayTeam;\\n\\t}\\n\\n\\t///////////////\\n\\t// MAPPINGS  //\\n\\t///////////////\\n\\n\\tmapping(uint256 => uint256[]) private challenger_formation;\\n\\tmapping(uint256 => Game) public games;\\n\\tmapping(uint256 => GameResult) public gameResults;\\n\\tuint256 public gameCount;\\n\\n\\t///////////////\\n\\t// EVENTS  //\\n\\t///////////////\\n\\n\\tevent GameProposed(\\n\\t\\tuint256 gameId,\\n\\t\\taddress indexed challenger,\\n\\t\\taddress indexed opponent,\\n\\t\\tuint256 wagerAmount\\n\\t);\\n\\n\\tevent GameAccepted(\\n\\t\\tuint256 gameId,\\n\\t\\taddress indexed opponent,\\n\\t\\tuint256 wagerAmount\\n\\t);\\n\\n\\tevent GameFinished(uint256 gameId);\\n\\n\\t///////////////\\n\\t// PLAYERS   //\\n\\t///////////////\\n\\n\\tstruct Player {\\n\\t\\tuint256 player_id;\\n\\t\\tuint256 team_id;\\n\\t\\tuint256 position; // 0 = Empty, 1 = Goalkeeper, 2 = Defense, 3 = Midfield, 4 = Attack\\n\\t\\tuint128 attack;\\n\\t\\tuint128 defense;\\n\\t\\tuint128 speed;\\n\\t\\tuint128 power;\\n\\t\\tuint128 stamina;\\n\\t\\tuint128 technique;\\n\\t\\tuint128 goalkeeping;\\n\\t}\\n\\n\\tmapping(uint256 => Player) public players;\\n\\n\\tfunction addPlayer(\\n\\t\\tuint256 playerId,\\n\\t\\tuint256 teamId,\\n\\t\\tuint256 position,\\n\\t\\tuint128 attack,\\n\\t\\tuint128 defense,\\n\\t\\tuint128 speed,\\n\\t\\tuint128 power,\\n\\t\\tuint128 stamina,\\n\\t\\tuint128 technique,\\n\\t\\tuint128 goalkeeping\\n\\t) public onlyOwner {\\n\\t\\tPlayer memory newPlayer = Player({\\n\\t\\t\\tplayer_id: playerId,\\n\\t\\t\\tteam_id: teamId,\\n\\t\\t\\tposition: position,\\n\\t\\t\\tattack: attack,\\n\\t\\t\\tdefense: defense,\\n\\t\\t\\tspeed: speed,\\n\\t\\t\\tpower: power,\\n\\t\\t\\tstamina: stamina,\\n\\t\\t\\ttechnique: technique,\\n\\t\\t\\tgoalkeeping: goalkeeping\\n\\t\\t});\\n\\n\\t\\tplayers[playerId] = newPlayer;\\n\\t}\\n\\n\\t///////////////\\n\\t// CONSTRUCTOR  //\\n\\t///////////////\\n\\n\\tconstructor(IERC20 _footballCoin) {\\n\\t\\towner = msg.sender;\\n\\t\\tfootballCoin = _footballCoin;\\n\\t}\\n\\tmodifier onlyOwner() {\\n\\t\\trequire(msg.sender == owner, \\\"Caller is not the owner\\\");\\n\\t\\t_;\\n\\t}\\n\\n\\t///////////////\\n\\t// GAME FUNCTIONS  //\\n\\t///////////////\\n\\n\\tfunction proposeGame(\\n\\t\\taddress opponent,\\n\\t\\tuint256 wagerAmount,\\n\\t\\tuint256[] memory formation\\n\\t) public {\\n\\t\\trequire(\\n\\t\\t\\tfootballCoin.allowance(msg.sender, address(this)) >= wagerAmount,\\n\\t\\t\\t\\\"Insufficient allowance for wager\\\"\\n\\t\\t);\\n\\t\\tfor (uint i = 0; i < formation.length; i++) {\\n\\t\\t\\trequire(players[formation[i]].player_id != 0, \\\"Invalid player id\\\");\\n\\t\\t}\\n\\n\\t\\t// Transfer the wager amount from the challenger to the contract\\n\\t\\tfootballCoin.transferFrom(msg.sender, address(this), wagerAmount);\\n\\n\\t\\tuint256 newGameId = ++gameCount;\\n\\t\\tgames[newGameId] = Game({\\n\\t\\t\\tchallenger: msg.sender,\\n\\t\\t\\topponent: opponent,\\n\\t\\t\\twagerAmount: wagerAmount,\\n\\t\\t\\tchallengerFormation: new uint256[](0),\\n\\t\\t\\topponentFormation: new uint256[](0),\\n\\t\\t\\tisFinished: false,\\n\\t\\t\\tresult: \\\"\\\"\\n\\t\\t});\\n\\n\\t\\tchallenger_formation[newGameId] = formation;\\n\\n\\t\\t// Emitting events to notify about the new game proposal\\n\\t\\temit GameProposed(newGameId, msg.sender, opponent, wagerAmount);\\n\\t}\\n\\n\\tfunction acceptGame(uint256 gameId, uint256[] memory formation) public {\\n\\t\\tGame storage game = games[gameId];\\n\\n\\t\\trequire(\\n\\t\\t\\tmsg.sender == game.opponent,\\n\\t\\t\\t\\\"Only the opponent can accept the game\\\"\\n\\t\\t);\\n\\t\\trequire(\\n\\t\\t\\tfootballCoin.allowance(msg.sender, address(this)) >=\\n\\t\\t\\t\\tgame.wagerAmount,\\n\\t\\t\\t\\\"Insufficient allowance for wager\\\"\\n\\t\\t);\\n\\t\\tfor (uint i = 0; i < formation.length; i++) {\\n\\t\\t\\trequire(players[formation[i]].player_id != 0, \\\"Invalid player id\\\");\\n\\t\\t}\\n\\n\\t\\t// Transfer the wager amount from the opponent to the contract\\n\\t\\tfootballCoin.transferFrom(msg.sender, address(this), game.wagerAmount);\\n\\n\\t\\tgame.opponentFormation = formation;\\n\\n\\t\\t// Notify about game acceptance\\n\\t\\temit GameAccepted(gameId, msg.sender, game.wagerAmount);\\n\\t}\\n\\n\\tfunction revealOutcome(uint256 gameId) public {\\n\\t\\tGame storage game = games[gameId];\\n\\n\\t\\trequire(\\n\\t\\t\\tmsg.sender == game.challenger,\\n\\t\\t\\t\\\"Only the challenger can reveal the outcome\\\"\\n\\t\\t);\\n\\t\\trequire(!game.isFinished, \\\"The game is already finished\\\");\\n\\n\\t\\tgame.challengerFormation = challenger_formation[gameId];\\n\\n\\t\\tGameResult memory result = determineGameResult(game);\\n\\t\\tgameResults[gameId] = result;\\n\\n\\t\\tgame.isFinished = true;\\n\\n\\t\\taddress winner = determineWinner(game, result);\\n\\t\\tpayoutWinners(game, winner);\\n\\n\\t\\temit GameFinished(gameId);\\n\\t}\\n\\n\\t///////////////\\n\\t// HELPER FUNCTIONS  //\\n\\t///////////////\\n\\n\\tfunction determineGameResult(\\n\\t\\tGame storage game\\n\\t) private view returns (GameResult memory) {\\n\\t\\tGameResult memory result = GameResult({\\n\\t\\t\\tgoalsHomeTeam: 0,\\n\\t\\t\\tgoalsAwayTeam: 0\\n\\t\\t});\\n\\n\\t\\t// Player memory homeGoalkeeper = players[game.challengerFormation[1]];\\n\\t\\t// Player memory awayGoalkeeper = players[game.opponentFormation[1]];\\n\\t\\tbytes32 prevRandao = blockhash(block.number - 1);\\n\\t\\tuint256[] memory randomValues = extractRandomValues(10, prevRandao);\\n\\t\\tfor (uint i = 1; i < game.challengerFormation.length; i++) {\\n\\t\\t\\tPlayer memory homePlayer = players[game.challengerFormation[i]];\\n\\t\\t\\tPlayer memory awayPlayer = players[\\n\\t\\t\\t\\tgame.opponentFormation[game.challengerFormation.length - i]\\n\\t\\t\\t];\\n\\t\\t\\tuint256 totalspeed = homePlayer.speed + awayPlayer.speed;\\n\\t\\t\\tuint256 randomSpeed = uint256(prevRandao) % totalspeed;\\n\\t\\t\\tif (homePlayer.speed > randomSpeed) {\\n\\t\\t\\t\\t// Home player attacks\\n\\t\\t\\t\\tif (homePlayer.attack > randomValues[i - 1]) {\\n\\t\\t\\t\\t\\tresult.goalsHomeTeam++;\\n\\t\\t\\t\\t}\\n\\t\\t\\t} else {\\n\\t\\t\\t\\tif (awayPlayer.attack > randomValues[i - 1]) {\\n\\t\\t\\t\\t\\tresult.goalsAwayTeam++;\\n\\t\\t\\t\\t}\\n\\t\\t\\t}\\n\\t\\t}\\n\\n\\t\\treturn result;\\n\\t}\\n\\n\\tfunction extractRandomValues(\\n\\t\\tuint numberOfValues,\\n\\t\\tbytes32 prevRandao\\n\\t) public pure returns (uint[] memory) {\\n\\t\\trequire(numberOfValues > 0, \\\"Number of values must be greater than 0\\\");\\n\\t\\tuint[] memory randomValues = new uint[](numberOfValues);\\n\\t\\tuint256 randValue = uint256(prevRandao);\\n\\n\\t\\tfor (uint i = 0; i < numberOfValues; i++) {\\n\\t\\t\\trandomValues[i] = randValue % 100;\\n\\t\\t\\trandValue = randValue / 256; // Shift right by 2 hex digits\\n\\t\\t}\\n\\n\\t\\treturn randomValues;\\n\\t}\\n\\n\\tfunction determineWinner(\\n\\t\\tGame storage game,\\n\\t\\tGameResult memory result\\n\\t) private view returns (address) {\\n\\t\\tif (result.goalsHomeTeam > result.goalsAwayTeam) {\\n\\t\\t\\treturn game.challenger;\\n\\t\\t} else if (result.goalsHomeTeam < result.goalsAwayTeam) {\\n\\t\\t\\treturn game.opponent;\\n\\t\\t}\\n\\t\\treturn address(0); // It's a draw\\n\\t}\\n\\n\\tfunction payoutWinners(Game storage game, address winner) private {\\n\\t\\tif (winner == address(0)) {\\n\\t\\t\\trequire(\\n\\t\\t\\t\\tfootballCoin.transfer(game.challenger, game.wagerAmount),\\n\\t\\t\\t\\t\\\"Refund to challenger failed\\\"\\n\\t\\t\\t);\\n\\t\\t\\trequire(\\n\\t\\t\\t\\tfootballCoin.transfer(game.opponent, game.wagerAmount),\\n\\t\\t\\t\\t\\\"Refund to opponent failed\\\"\\n\\t\\t\\t);\\n\\t\\t} else {\\n\\t\\t\\tuint256 totalPot = game.wagerAmount * 2;\\n\\t\\t\\trequire(\\n\\t\\t\\t\\tfootballCoin.transfer(winner, totalPot),\\n\\t\\t\\t\\t\\\"Transfer to winner failed\\\"\\n\\t\\t\\t);\\n\\t\\t}\\n\\t}\\n}\\n\",\"keccak256\":\"0x09d378cab1f6558d58be046b4bbdef0a201025f75f3a8fd84eab8bfa5f12eb4f\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b50604051611a36380380611a3683398101604081905261002f91610062565b60008054336001600160a01b031991821617909155600180549091166001600160a01b0392909216919091179055610092565b60006020828403121561007457600080fd5b81516001600160a01b038116811461008b57600080fd5b9392505050565b611995806100a16000396000f3fe608060405234801561001057600080fd5b50600436106100a95760003560e01c806364407bad1161007157806364407bad1461013a5780638da5cb5b14610165578063cd86f81014610178578063cfb947981461018b578063f71d96cb1461019e578063fdba1b7c1461027257600080fd5b8063117a5b90146100ae5780634d1975b4146100db578063506d7e2d146100f257806352bab1c91461010757806359c892a914610127575b600080fd5b6100c16100bc3660046113ea565b6102ae565b6040516100d2959493929190611403565b60405180910390f35b6100e460055481565b6040519081526020016100d2565b610105610100366004611499565b610378565b005b61011a61011536600461153e565b6104c1565b6040516100d29190611560565b610105610135366004611655565b6105ca565b60015461014d906001600160a01b031681565b6040516001600160a01b0390911681526020016100d2565b60005461014d906001600160a01b031681565b61010561018636600461169c565b61087c565b6101056101993660046113ea565b610c1b565b6102156101ac3660046113ea565b600660208190526000918252604090912080546001820154600283015460038401546004850154600586015495909601549395929491936001600160801b0380831694600160801b9384900482169481831694918290048316938184169392909104821691168a565b604080519a8b5260208b0199909952978901969096526001600160801b039485166060890152928416608088015290831660a0870152821660c0860152811660e085015290811661010084015216610120820152610140016100d2565b6102996102803660046113ea565b6004602052600090815260409020805460019091015482565b604080519283526020830191909152016100d2565b600360205260009081526040902080546001820154600283015460058401546006850180546001600160a01b03958616969490951694929360ff909216926102f590611701565b80601f016020809104026020016040519081016040528092919081815260200182805461032190611701565b801561036e5780601f106103435761010080835404028352916020019161036e565b820191906000526020600020905b81548152906001019060200180831161035157829003601f168201915b5050505050905085565b6000546001600160a01b031633146103d75760405162461bcd60e51b815260206004820152601760248201527f43616c6c6572206973206e6f7420746865206f776e657200000000000000000060448201526064015b60405180910390fd5b60408051610140810182528b815260208082019b8c528183019a8b526001600160801b03998a1660608301908152988a1660808301908152978a1660a08301908152968a1660c08301908152958a1660e08301908152948a166101008301908152938a16610120830190815260009d8e5260069182905292909c2090518155995160018b0155975160028a015594519351938616600160801b94871685021760038901559151905190851690851683021760048701555191519183169183160217600584015590519190920180546fffffffffffffffffffffffffffffffff191691909216179055565b6060600083116105235760405162461bcd60e51b815260206004820152602760248201527f4e756d626572206f662076616c756573206d75737420626520677265617465726044820152660207468616e20360cc1b60648201526084016103ce565b60008367ffffffffffffffff81111561053e5761053e6115a4565b604051908082528060200260200182016040528015610567578160200160208202803683370190505b5090508260005b858110156105be57610581606483611751565b83828151811061059357610593611765565b60209081029190910101526105aa61010083611791565b9150806105b6816117a5565b91505061056e565b50909150505b92915050565b600082815260036020526040902060018101546001600160a01b031633146106425760405162461bcd60e51b815260206004820152602560248201527f4f6e6c7920746865206f70706f6e656e742063616e20616363657074207468656044820152642067616d6560d81b60648201526084016103ce565b6002810154600154604051636eb1769f60e11b81523360048201523060248201526001600160a01b039091169063dd62ed3e90604401602060405180830381865afa158015610695573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106b991906117be565b10156107075760405162461bcd60e51b815260206004820181905260248201527f496e73756666696369656e7420616c6c6f77616e636520666f7220776167657260448201526064016103ce565b60005b8251811015610798576006600084838151811061072957610729611765565b60200260200101518152602001908152602001600020600001546000036107865760405162461bcd60e51b8152602060048201526011602482015270125b9d985b1a59081c1b185e595c881a59607a1b60448201526064016103ce565b80610790816117a5565b91505061070a565b5060015460028201546040516323b872dd60e01b815233600482015230602482015260448101919091526001600160a01b03909116906323b872dd906064016020604051808303816000875af11580156107f6573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061081a91906117d7565b508151610830906004830190602085019061134a565b50600281015460405133917fc12989f4ffb898af45d9bec31ea6e4b22af6acc72ca98399ca9a866e72c954f89161086f91878252602082015260400190565b60405180910390a2505050565b600154604051636eb1769f60e11b815233600482015230602482015283916001600160a01b03169063dd62ed3e90604401602060405180830381865afa1580156108ca573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108ee91906117be565b101561093c5760405162461bcd60e51b815260206004820181905260248201527f496e73756666696369656e7420616c6c6f77616e636520666f7220776167657260448201526064016103ce565b60005b81518110156109cd576006600083838151811061095e5761095e611765565b60200260200101518152602001908152602001600020600001546000036109bb5760405162461bcd60e51b8152602060048201526011602482015270125b9d985b1a59081c1b185e595c881a59607a1b60448201526064016103ce565b806109c5816117a5565b91505061093f565b506001546040516323b872dd60e01b8152336004820152306024820152604481018490526001600160a01b03909116906323b872dd906064016020604051808303816000875af1158015610a25573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a4991906117d7565b506000600560008154610a5b906117a5565b91829055506040805160e0810182523381526001600160a01b0387166020820152908101859052909150606081016000604051908082528060200260200182016040528015610ab4578160200160208202803683370190505b5081526020016000604051908082528060200260200182016040528015610ae5578160200160208202803683370190505b5081526000602080830182905260408051808301825283815293810193909352848252600380825291839020845181546001600160a01b039182166001600160a01b03199182161783558684015160018401805491909316911617905592840151600284015560608401518051610b6393850192919091019061134a565b5060808201518051610b7f91600484019160209091019061134a565b5060a082015160058201805460ff191691151591909117905560c08201516006820190610bac908261184e565b50505060008181526002602090815260409091208351610bce9285019061134a565b5060408051828152602081018590526001600160a01b0386169133917f92ed5225f997614241753c97f8dff081ab07610d11f06f0c031e4421679af13f910160405180910390a350505050565b600081815260036020526040902080546001600160a01b03163314610c955760405162461bcd60e51b815260206004820152602a60248201527f4f6e6c7920746865206368616c6c656e6765722063616e2072657665616c20746044820152696865206f7574636f6d6560b01b60648201526084016103ce565b600581015460ff1615610cea5760405162461bcd60e51b815260206004820152601c60248201527f5468652067616d6520697320616c72656164792066696e69736865640000000060448201526064016103ce565b60008281526002602052604090208054610d08916003840191611395565b506000610d1482610d93565b60008481526004602090815260408220835181559083015160019182015560058501805460ff19169091179055909150610d4e8383611077565b9050610d5a83826110c4565b6040518481527f6543ec12c6e53f26532beb5289ef5732dcd77c2e9e9921ae42b695905f5e84c09060200160405180910390a150505050565b604080518082019091526000808252602082015260408051808201909152600080825260208201819052610dc860014361190e565b4090506000610dd8600a836104c1565b905060015b600386015481101561106d57600060066000886003018481548110610e0457610e04611765565b600091825260208083209091015483528281019390935260409182018120825161014081018452815481526001820154948101949094526002810154928401929092526003808301546001600160801b038082166060870152600160801b918290048116608087015260048086015480831660a0890152839004821660c0880152600586015480831660e089015292909204811661010087015260069485015416610120860152908b0154939450909283918b0190610ec490879061190e565b81548110610ed457610ed4611765565b6000918252602080832090910154835282810193909352604091820181208251610140810184528154815260018201549481019490945260028101549284019290925260038201546001600160801b038082166060860152600160801b9182900481166080860152600484015480821660a080880182905291849004831660c0880152600586015480841660e0890152939093048216610100870152600690940154166101208501529185015192935091610f8f9190611921565b6001600160801b031690506000610fa68288611751565b9050808460a001516001600160801b0316111561100a5785610fc960018761190e565b81518110610fd957610fd9611765565b602002602001015184606001516001600160801b0316111561100557875188611001826117a5565b9052505b611056565b8561101660018761190e565b8151811061102657611026611765565b602002602001015183606001516001600160801b031611156110565760208801805190611052826117a5565b9052505b505050508080611065906117a5565b915050610ddd565b5091949350505050565b600081602001518260000151111561109a575081546001600160a01b03166105c4565b6020820151825110156110bb575060018201546001600160a01b03166105c4565b50600092915050565b6001600160a01b03811661126d576001548254600284015460405163a9059cbb60e01b81526001600160a01b039283166004820152602481019190915291169063a9059cbb906044016020604051808303816000875af115801561112c573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061115091906117d7565b61119c5760405162461bcd60e51b815260206004820152601b60248201527f526566756e6420746f206368616c6c656e676572206661696c6564000000000060448201526064016103ce565b6001805490830154600284015460405163a9059cbb60e01b81526001600160a01b039283166004820152602481019190915291169063a9059cbb906044016020604051808303816000875af11580156111f9573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061121d91906117d7565b6112695760405162461bcd60e51b815260206004820152601960248201527f526566756e6420746f206f70706f6e656e74206661696c65640000000000000060448201526064016103ce565b5050565b6000826002015460026112809190611948565b60015460405163a9059cbb60e01b81526001600160a01b0385811660048301526024820184905292935091169063a9059cbb906044016020604051808303816000875af11580156112d5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112f991906117d7565b6113455760405162461bcd60e51b815260206004820152601960248201527f5472616e7366657220746f2077696e6e6572206661696c65640000000000000060448201526064016103ce565b505050565b828054828255906000526020600020908101928215611385579160200282015b8281111561138557825182559160200191906001019061136a565b506113919291506113d5565b5090565b8280548282559060005260206000209081019282156113855760005260206000209182015b828111156113855782548255916001019190600101906113ba565b5b8082111561139157600081556001016113d6565b6000602082840312156113fc57600080fd5b5035919050565b600060018060a01b038088168352602081881681850152866040850152851515606085015260a06080850152845191508160a085015260005b828110156114585785810182015185820160c00152810161143c565b5050600060c0828501015260c0601f19601f8301168401019150509695505050505050565b80356001600160801b038116811461149457600080fd5b919050565b6000806000806000806000806000806101408b8d0312156114b957600080fd5b8a35995060208b0135985060408b013597506114d760608c0161147d565b96506114e560808c0161147d565b95506114f360a08c0161147d565b945061150160c08c0161147d565b935061150f60e08c0161147d565b925061151e6101008c0161147d565b915061152d6101208c0161147d565b90509295989b9194979a5092959850565b6000806040838503121561155157600080fd5b50508035926020909101359150565b6020808252825182820181905260009190848201906040850190845b818110156115985783518352928401929184019160010161157c565b50909695505050505050565b634e487b7160e01b600052604160045260246000fd5b600082601f8301126115cb57600080fd5b8135602067ffffffffffffffff808311156115e8576115e86115a4565b8260051b604051601f19603f8301168101818110848211171561160d5761160d6115a4565b60405293845285810183019383810192508785111561162b57600080fd5b83870191505b8482101561164a57813583529183019190830190611631565b979650505050505050565b6000806040838503121561166857600080fd5b82359150602083013567ffffffffffffffff81111561168657600080fd5b611692858286016115ba565b9150509250929050565b6000806000606084860312156116b157600080fd5b83356001600160a01b03811681146116c857600080fd5b925060208401359150604084013567ffffffffffffffff8111156116eb57600080fd5b6116f7868287016115ba565b9150509250925092565b600181811c9082168061171557607f821691505b60208210810361173557634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601260045260246000fd5b6000826117605761176061173b565b500690565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b6000826117a0576117a061173b565b500490565b6000600182016117b7576117b761177b565b5060010190565b6000602082840312156117d057600080fd5b5051919050565b6000602082840312156117e957600080fd5b815180151581146117f957600080fd5b9392505050565b601f82111561134557600081815260208120601f850160051c810160208610156118275750805b601f850160051c820191505b8181101561184657828155600101611833565b505050505050565b815167ffffffffffffffff811115611868576118686115a4565b61187c816118768454611701565b84611800565b602080601f8311600181146118b157600084156118995750858301515b600019600386901b1c1916600185901b178555611846565b600085815260208120601f198616915b828110156118e0578886015182559484019460019091019084016118c1565b50858210156118fe5787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b818103818111156105c4576105c461177b565b6001600160801b038181168382160190808211156119415761194161177b565b5092915050565b80820281158282048414176105c4576105c461177b56fea2646970667358221220a6d53477b457706eec06ce26619dd614774739ac24cac7b56fbdf552b3e18af764736f6c63430008110033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100a95760003560e01c806364407bad1161007157806364407bad1461013a5780638da5cb5b14610165578063cd86f81014610178578063cfb947981461018b578063f71d96cb1461019e578063fdba1b7c1461027257600080fd5b8063117a5b90146100ae5780634d1975b4146100db578063506d7e2d146100f257806352bab1c91461010757806359c892a914610127575b600080fd5b6100c16100bc3660046113ea565b6102ae565b6040516100d2959493929190611403565b60405180910390f35b6100e460055481565b6040519081526020016100d2565b610105610100366004611499565b610378565b005b61011a61011536600461153e565b6104c1565b6040516100d29190611560565b610105610135366004611655565b6105ca565b60015461014d906001600160a01b031681565b6040516001600160a01b0390911681526020016100d2565b60005461014d906001600160a01b031681565b61010561018636600461169c565b61087c565b6101056101993660046113ea565b610c1b565b6102156101ac3660046113ea565b600660208190526000918252604090912080546001820154600283015460038401546004850154600586015495909601549395929491936001600160801b0380831694600160801b9384900482169481831694918290048316938184169392909104821691168a565b604080519a8b5260208b0199909952978901969096526001600160801b039485166060890152928416608088015290831660a0870152821660c0860152811660e085015290811661010084015216610120820152610140016100d2565b6102996102803660046113ea565b6004602052600090815260409020805460019091015482565b604080519283526020830191909152016100d2565b600360205260009081526040902080546001820154600283015460058401546006850180546001600160a01b03958616969490951694929360ff909216926102f590611701565b80601f016020809104026020016040519081016040528092919081815260200182805461032190611701565b801561036e5780601f106103435761010080835404028352916020019161036e565b820191906000526020600020905b81548152906001019060200180831161035157829003601f168201915b5050505050905085565b6000546001600160a01b031633146103d75760405162461bcd60e51b815260206004820152601760248201527f43616c6c6572206973206e6f7420746865206f776e657200000000000000000060448201526064015b60405180910390fd5b60408051610140810182528b815260208082019b8c528183019a8b526001600160801b03998a1660608301908152988a1660808301908152978a1660a08301908152968a1660c08301908152958a1660e08301908152948a166101008301908152938a16610120830190815260009d8e5260069182905292909c2090518155995160018b0155975160028a015594519351938616600160801b94871685021760038901559151905190851690851683021760048701555191519183169183160217600584015590519190920180546fffffffffffffffffffffffffffffffff191691909216179055565b6060600083116105235760405162461bcd60e51b815260206004820152602760248201527f4e756d626572206f662076616c756573206d75737420626520677265617465726044820152660207468616e20360cc1b60648201526084016103ce565b60008367ffffffffffffffff81111561053e5761053e6115a4565b604051908082528060200260200182016040528015610567578160200160208202803683370190505b5090508260005b858110156105be57610581606483611751565b83828151811061059357610593611765565b60209081029190910101526105aa61010083611791565b9150806105b6816117a5565b91505061056e565b50909150505b92915050565b600082815260036020526040902060018101546001600160a01b031633146106425760405162461bcd60e51b815260206004820152602560248201527f4f6e6c7920746865206f70706f6e656e742063616e20616363657074207468656044820152642067616d6560d81b60648201526084016103ce565b6002810154600154604051636eb1769f60e11b81523360048201523060248201526001600160a01b039091169063dd62ed3e90604401602060405180830381865afa158015610695573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106b991906117be565b10156107075760405162461bcd60e51b815260206004820181905260248201527f496e73756666696369656e7420616c6c6f77616e636520666f7220776167657260448201526064016103ce565b60005b8251811015610798576006600084838151811061072957610729611765565b60200260200101518152602001908152602001600020600001546000036107865760405162461bcd60e51b8152602060048201526011602482015270125b9d985b1a59081c1b185e595c881a59607a1b60448201526064016103ce565b80610790816117a5565b91505061070a565b5060015460028201546040516323b872dd60e01b815233600482015230602482015260448101919091526001600160a01b03909116906323b872dd906064016020604051808303816000875af11580156107f6573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061081a91906117d7565b508151610830906004830190602085019061134a565b50600281015460405133917fc12989f4ffb898af45d9bec31ea6e4b22af6acc72ca98399ca9a866e72c954f89161086f91878252602082015260400190565b60405180910390a2505050565b600154604051636eb1769f60e11b815233600482015230602482015283916001600160a01b03169063dd62ed3e90604401602060405180830381865afa1580156108ca573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108ee91906117be565b101561093c5760405162461bcd60e51b815260206004820181905260248201527f496e73756666696369656e7420616c6c6f77616e636520666f7220776167657260448201526064016103ce565b60005b81518110156109cd576006600083838151811061095e5761095e611765565b60200260200101518152602001908152602001600020600001546000036109bb5760405162461bcd60e51b8152602060048201526011602482015270125b9d985b1a59081c1b185e595c881a59607a1b60448201526064016103ce565b806109c5816117a5565b91505061093f565b506001546040516323b872dd60e01b8152336004820152306024820152604481018490526001600160a01b03909116906323b872dd906064016020604051808303816000875af1158015610a25573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a4991906117d7565b506000600560008154610a5b906117a5565b91829055506040805160e0810182523381526001600160a01b0387166020820152908101859052909150606081016000604051908082528060200260200182016040528015610ab4578160200160208202803683370190505b5081526020016000604051908082528060200260200182016040528015610ae5578160200160208202803683370190505b5081526000602080830182905260408051808301825283815293810193909352848252600380825291839020845181546001600160a01b039182166001600160a01b03199182161783558684015160018401805491909316911617905592840151600284015560608401518051610b6393850192919091019061134a565b5060808201518051610b7f91600484019160209091019061134a565b5060a082015160058201805460ff191691151591909117905560c08201516006820190610bac908261184e565b50505060008181526002602090815260409091208351610bce9285019061134a565b5060408051828152602081018590526001600160a01b0386169133917f92ed5225f997614241753c97f8dff081ab07610d11f06f0c031e4421679af13f910160405180910390a350505050565b600081815260036020526040902080546001600160a01b03163314610c955760405162461bcd60e51b815260206004820152602a60248201527f4f6e6c7920746865206368616c6c656e6765722063616e2072657665616c20746044820152696865206f7574636f6d6560b01b60648201526084016103ce565b600581015460ff1615610cea5760405162461bcd60e51b815260206004820152601c60248201527f5468652067616d6520697320616c72656164792066696e69736865640000000060448201526064016103ce565b60008281526002602052604090208054610d08916003840191611395565b506000610d1482610d93565b60008481526004602090815260408220835181559083015160019182015560058501805460ff19169091179055909150610d4e8383611077565b9050610d5a83826110c4565b6040518481527f6543ec12c6e53f26532beb5289ef5732dcd77c2e9e9921ae42b695905f5e84c09060200160405180910390a150505050565b604080518082019091526000808252602082015260408051808201909152600080825260208201819052610dc860014361190e565b4090506000610dd8600a836104c1565b905060015b600386015481101561106d57600060066000886003018481548110610e0457610e04611765565b600091825260208083209091015483528281019390935260409182018120825161014081018452815481526001820154948101949094526002810154928401929092526003808301546001600160801b038082166060870152600160801b918290048116608087015260048086015480831660a0890152839004821660c0880152600586015480831660e089015292909204811661010087015260069485015416610120860152908b0154939450909283918b0190610ec490879061190e565b81548110610ed457610ed4611765565b6000918252602080832090910154835282810193909352604091820181208251610140810184528154815260018201549481019490945260028101549284019290925260038201546001600160801b038082166060860152600160801b9182900481166080860152600484015480821660a080880182905291849004831660c0880152600586015480841660e0890152939093048216610100870152600690940154166101208501529185015192935091610f8f9190611921565b6001600160801b031690506000610fa68288611751565b9050808460a001516001600160801b0316111561100a5785610fc960018761190e565b81518110610fd957610fd9611765565b602002602001015184606001516001600160801b0316111561100557875188611001826117a5565b9052505b611056565b8561101660018761190e565b8151811061102657611026611765565b602002602001015183606001516001600160801b031611156110565760208801805190611052826117a5565b9052505b505050508080611065906117a5565b915050610ddd565b5091949350505050565b600081602001518260000151111561109a575081546001600160a01b03166105c4565b6020820151825110156110bb575060018201546001600160a01b03166105c4565b50600092915050565b6001600160a01b03811661126d576001548254600284015460405163a9059cbb60e01b81526001600160a01b039283166004820152602481019190915291169063a9059cbb906044016020604051808303816000875af115801561112c573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061115091906117d7565b61119c5760405162461bcd60e51b815260206004820152601b60248201527f526566756e6420746f206368616c6c656e676572206661696c6564000000000060448201526064016103ce565b6001805490830154600284015460405163a9059cbb60e01b81526001600160a01b039283166004820152602481019190915291169063a9059cbb906044016020604051808303816000875af11580156111f9573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061121d91906117d7565b6112695760405162461bcd60e51b815260206004820152601960248201527f526566756e6420746f206f70706f6e656e74206661696c65640000000000000060448201526064016103ce565b5050565b6000826002015460026112809190611948565b60015460405163a9059cbb60e01b81526001600160a01b0385811660048301526024820184905292935091169063a9059cbb906044016020604051808303816000875af11580156112d5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112f991906117d7565b6113455760405162461bcd60e51b815260206004820152601960248201527f5472616e7366657220746f2077696e6e6572206661696c65640000000000000060448201526064016103ce565b505050565b828054828255906000526020600020908101928215611385579160200282015b8281111561138557825182559160200191906001019061136a565b506113919291506113d5565b5090565b8280548282559060005260206000209081019282156113855760005260206000209182015b828111156113855782548255916001019190600101906113ba565b5b8082111561139157600081556001016113d6565b6000602082840312156113fc57600080fd5b5035919050565b600060018060a01b038088168352602081881681850152866040850152851515606085015260a06080850152845191508160a085015260005b828110156114585785810182015185820160c00152810161143c565b5050600060c0828501015260c0601f19601f8301168401019150509695505050505050565b80356001600160801b038116811461149457600080fd5b919050565b6000806000806000806000806000806101408b8d0312156114b957600080fd5b8a35995060208b0135985060408b013597506114d760608c0161147d565b96506114e560808c0161147d565b95506114f360a08c0161147d565b945061150160c08c0161147d565b935061150f60e08c0161147d565b925061151e6101008c0161147d565b915061152d6101208c0161147d565b90509295989b9194979a5092959850565b6000806040838503121561155157600080fd5b50508035926020909101359150565b6020808252825182820181905260009190848201906040850190845b818110156115985783518352928401929184019160010161157c565b50909695505050505050565b634e487b7160e01b600052604160045260246000fd5b600082601f8301126115cb57600080fd5b8135602067ffffffffffffffff808311156115e8576115e86115a4565b8260051b604051601f19603f8301168101818110848211171561160d5761160d6115a4565b60405293845285810183019383810192508785111561162b57600080fd5b83870191505b8482101561164a57813583529183019190830190611631565b979650505050505050565b6000806040838503121561166857600080fd5b82359150602083013567ffffffffffffffff81111561168657600080fd5b611692858286016115ba565b9150509250929050565b6000806000606084860312156116b157600080fd5b83356001600160a01b03811681146116c857600080fd5b925060208401359150604084013567ffffffffffffffff8111156116eb57600080fd5b6116f7868287016115ba565b9150509250925092565b600181811c9082168061171557607f821691505b60208210810361173557634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601260045260246000fd5b6000826117605761176061173b565b500690565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b6000826117a0576117a061173b565b500490565b6000600182016117b7576117b761177b565b5060010190565b6000602082840312156117d057600080fd5b5051919050565b6000602082840312156117e957600080fd5b815180151581146117f957600080fd5b9392505050565b601f82111561134557600081815260208120601f850160051c810160208610156118275750805b601f850160051c820191505b8181101561184657828155600101611833565b505050505050565b815167ffffffffffffffff811115611868576118686115a4565b61187c816118768454611701565b84611800565b602080601f8311600181146118b157600084156118995750858301515b600019600386901b1c1916600185901b178555611846565b600085815260208120601f198616915b828110156118e0578886015182559484019460019091019084016118c1565b50858210156118fe5787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b818103818111156105c4576105c461177b565b6001600160801b038181168382160190808211156119415761194161177b565b5092915050565b80820281158282048414176105c4576105c461177b56fea2646970667358221220a6d53477b457706eec06ce26619dd614774739ac24cac7b56fbdf552b3e18af764736f6c63430008110033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 82,
        "contract": "contracts/FootballGame.sol:FootballGame",
        "label": "owner",
        "offset": 0,
        "slot": "0",
        "type": "t_address"
      },
      {
        "astId": 85,
        "contract": "contracts/FootballGame.sol:FootballGame",
        "label": "footballCoin",
        "offset": 0,
        "slot": "1",
        "type": "t_contract(IERC20)77"
      },
      {
        "astId": 112,
        "contract": "contracts/FootballGame.sol:FootballGame",
        "label": "challenger_formation",
        "offset": 0,
        "slot": "2",
        "type": "t_mapping(t_uint256,t_array(t_uint256)dyn_storage)"
      },
      {
        "astId": 117,
        "contract": "contracts/FootballGame.sol:FootballGame",
        "label": "games",
        "offset": 0,
        "slot": "3",
        "type": "t_mapping(t_uint256,t_struct(Game)102_storage)"
      },
      {
        "astId": 122,
        "contract": "contracts/FootballGame.sol:FootballGame",
        "label": "gameResults",
        "offset": 0,
        "slot": "4",
        "type": "t_mapping(t_uint256,t_struct(GameResult)107_storage)"
      },
      {
        "astId": 124,
        "contract": "contracts/FootballGame.sol:FootballGame",
        "label": "gameCount",
        "offset": 0,
        "slot": "5",
        "type": "t_uint256"
      },
      {
        "astId": 172,
        "contract": "contracts/FootballGame.sol:FootballGame",
        "label": "players",
        "offset": 0,
        "slot": "6",
        "type": "t_mapping(t_uint256,t_struct(Player)167_storage)"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_uint256)dyn_storage": {
        "base": "t_uint256",
        "encoding": "dynamic_array",
        "label": "uint256[]",
        "numberOfBytes": "32"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_contract(IERC20)77": {
        "encoding": "inplace",
        "label": "contract IERC20",
        "numberOfBytes": "20"
      },
      "t_mapping(t_uint256,t_array(t_uint256)dyn_storage)": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => uint256[])",
        "numberOfBytes": "32",
        "value": "t_array(t_uint256)dyn_storage"
      },
      "t_mapping(t_uint256,t_struct(Game)102_storage)": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => struct FootballGame.Game)",
        "numberOfBytes": "32",
        "value": "t_struct(Game)102_storage"
      },
      "t_mapping(t_uint256,t_struct(GameResult)107_storage)": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => struct FootballGame.GameResult)",
        "numberOfBytes": "32",
        "value": "t_struct(GameResult)107_storage"
      },
      "t_mapping(t_uint256,t_struct(Player)167_storage)": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => struct FootballGame.Player)",
        "numberOfBytes": "32",
        "value": "t_struct(Player)167_storage"
      },
      "t_string_storage": {
        "encoding": "bytes",
        "label": "string",
        "numberOfBytes": "32"
      },
      "t_struct(Game)102_storage": {
        "encoding": "inplace",
        "label": "struct FootballGame.Game",
        "members": [
          {
            "astId": 87,
            "contract": "contracts/FootballGame.sol:FootballGame",
            "label": "challenger",
            "offset": 0,
            "slot": "0",
            "type": "t_address"
          },
          {
            "astId": 89,
            "contract": "contracts/FootballGame.sol:FootballGame",
            "label": "opponent",
            "offset": 0,
            "slot": "1",
            "type": "t_address"
          },
          {
            "astId": 91,
            "contract": "contracts/FootballGame.sol:FootballGame",
            "label": "wagerAmount",
            "offset": 0,
            "slot": "2",
            "type": "t_uint256"
          },
          {
            "astId": 94,
            "contract": "contracts/FootballGame.sol:FootballGame",
            "label": "challengerFormation",
            "offset": 0,
            "slot": "3",
            "type": "t_array(t_uint256)dyn_storage"
          },
          {
            "astId": 97,
            "contract": "contracts/FootballGame.sol:FootballGame",
            "label": "opponentFormation",
            "offset": 0,
            "slot": "4",
            "type": "t_array(t_uint256)dyn_storage"
          },
          {
            "astId": 99,
            "contract": "contracts/FootballGame.sol:FootballGame",
            "label": "isFinished",
            "offset": 0,
            "slot": "5",
            "type": "t_bool"
          },
          {
            "astId": 101,
            "contract": "contracts/FootballGame.sol:FootballGame",
            "label": "result",
            "offset": 0,
            "slot": "6",
            "type": "t_string_storage"
          }
        ],
        "numberOfBytes": "224"
      },
      "t_struct(GameResult)107_storage": {
        "encoding": "inplace",
        "label": "struct FootballGame.GameResult",
        "members": [
          {
            "astId": 104,
            "contract": "contracts/FootballGame.sol:FootballGame",
            "label": "goalsHomeTeam",
            "offset": 0,
            "slot": "0",
            "type": "t_uint256"
          },
          {
            "astId": 106,
            "contract": "contracts/FootballGame.sol:FootballGame",
            "label": "goalsAwayTeam",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256"
          }
        ],
        "numberOfBytes": "64"
      },
      "t_struct(Player)167_storage": {
        "encoding": "inplace",
        "label": "struct FootballGame.Player",
        "members": [
          {
            "astId": 148,
            "contract": "contracts/FootballGame.sol:FootballGame",
            "label": "player_id",
            "offset": 0,
            "slot": "0",
            "type": "t_uint256"
          },
          {
            "astId": 150,
            "contract": "contracts/FootballGame.sol:FootballGame",
            "label": "team_id",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256"
          },
          {
            "astId": 152,
            "contract": "contracts/FootballGame.sol:FootballGame",
            "label": "position",
            "offset": 0,
            "slot": "2",
            "type": "t_uint256"
          },
          {
            "astId": 154,
            "contract": "contracts/FootballGame.sol:FootballGame",
            "label": "attack",
            "offset": 0,
            "slot": "3",
            "type": "t_uint128"
          },
          {
            "astId": 156,
            "contract": "contracts/FootballGame.sol:FootballGame",
            "label": "defense",
            "offset": 16,
            "slot": "3",
            "type": "t_uint128"
          },
          {
            "astId": 158,
            "contract": "contracts/FootballGame.sol:FootballGame",
            "label": "speed",
            "offset": 0,
            "slot": "4",
            "type": "t_uint128"
          },
          {
            "astId": 160,
            "contract": "contracts/FootballGame.sol:FootballGame",
            "label": "power",
            "offset": 16,
            "slot": "4",
            "type": "t_uint128"
          },
          {
            "astId": 162,
            "contract": "contracts/FootballGame.sol:FootballGame",
            "label": "stamina",
            "offset": 0,
            "slot": "5",
            "type": "t_uint128"
          },
          {
            "astId": 164,
            "contract": "contracts/FootballGame.sol:FootballGame",
            "label": "technique",
            "offset": 16,
            "slot": "5",
            "type": "t_uint128"
          },
          {
            "astId": 166,
            "contract": "contracts/FootballGame.sol:FootballGame",
            "label": "goalkeeping",
            "offset": 0,
            "slot": "6",
            "type": "t_uint128"
          }
        ],
        "numberOfBytes": "224"
      },
      "t_uint128": {
        "encoding": "inplace",
        "label": "uint128",
        "numberOfBytes": "16"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}